# @configure_input@
include include/config.Makefile
VPATH = @srcdir@

.PRECIOUS: @srcdir@/configure config.status
.PHONY: install all clean distclean reconfigure configure-help install-others install-Macaulay2 everything

CONFIG_FILES = @srcdir@/configure @srcdir@/config/install-sh @srcdir@/config/config.sub @srcdir@/config/config.guess @srcdir@/config/files

GNUmakefile : GNUmakefile.in; ./config.status GNUmakefile

include/config.Makefile: include/config.Makefile.in ; ./config.status include/config.Makefile
# include/config.Makefile depends on ./config.status, too, but we are including it
# it's enought that include/config.h depends on ./config.status
all :: include/config.Makefile

include/config.h: include/config.h.in ./config.status ; ./config.status include/config.h
all :: include/config.h

@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files
	$(MAKE) -C @srcdir@ -f Makefile
	@echo '-----------------------------------------------------------------------------'
	@echo '# $@ has just been remade'
	@echo '#  exiting so you can run it again the same way you did before'
	@echo '#  here is the way you ran it before:'
	@echo '#'
	@echo "     $(CONFIG_CMD)"
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1
status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  here is the way you ran $^ before:'
	@echo '#'
	@echo "     $(CONFIG_CMD)"
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
config.status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '# error: $@ not there or older than $^'
	@echo '#  exiting so you can run $^ the same way you did before'
	@echo '#  here is the way you ran it before:'
	@echo '#'
	@echo "     $(CONFIG_CMD)"
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1
reconfigure: $(CONFIG_FILES)
	./config.status --recheck
	./config.status
configure-help: $(CONFIG_FILES)
	@ @srcdir@/configure --help

# announcement only:
install all clean distclean install-others install-Macaulay2 ::
	@echo '-------- making '$@', $(PACKAGE_VERSION) for ARCH=$(ARCH) OS=$(OS) REL=$(REL) --------'

# first install target, the only place in the tree where 'all' is a prerequisite of 'install', hopefully.
install install-others install-Macaulay2 :: all
distclean::; rm -f config.cache config.log config.status configure.options
distclean:: clean
ifeq "$(CC)" "cl"
all:: ;	$(MAKE) -C WindowsNT
endif
all distclean check clean install install-others install-Macaulay2 :: ; $(MAKE) -C Macaulay2 $@
all::; $(MAKE) -C Macaulay2 doc
DIRS := $(target) $(bindir) $(libm2dir) $(man1dir) $(emacsdir) $(m2dir) $(docm2reldir)
install install-others install-Macaulay2 :: $(DIRS)
$(DIRS) :; $(INSTALL) -d $@
distclean ::; rm -f @CONFIGURED_FILES@ include/config.h include/config.Makefile

tarball: tarball.$(COMPRESS)
tarballs: tarball.bz2 tarball.tgz
tarball.bz2 :; tar cfhz $(PKG_TBZ) --bzip --exclude="Macaulay2-*-data" -C $(tarparent) $(tarsubdir)
tarball.tgz  :; tar cfhz $(PKG_TGZ) --gzip --exclude="Macaulay2-*-data" -C $(tarparent) $(tarsubdir)
ifeq "$(CYGWIN)" "yes"
install :: tarball
endif

debian : tarball.tgz ; $(MAKE) -C debian install

install install-others install-Macaulay2 all clean distclean::; @echo "-------- done making '$@' --------"
install all::
	@echo "************************************************"
	@echo "*                                              *"
	@echo "*    don't forget to run 'make -k check'       *"
	@echo "*                                              *"
	@echo "************************************************"

RerunExamples = false
everything: all
	$(MAKE) RerunExamples=$(RerunExamples) install
	$(MAKE) tarball debian
	@echo "************************************************"
	@echo "*                                              *"
	@echo "*    running 'make -k check'                   *"
	@echo "*                                              *"
	@echo "************************************************"
	$(MAKE) -k check

help :
	@ echo "usage: make [option...] [target...]"
	@ echo ""
	@ echo "targets:"
	@ echo "  all                         build/compile all files [the default target]"
	@ echo "  install                     generate the documentation, install all files"
	@ echo "    install-Macaulay2         install just the Macaulay2 package"
	@ echo "    install-others            install just the other packages"
	@ echo "  check                       run the tests"
	@ echo "  everything                  install (rerunning examples) and run the tests"
	@ echo "  tarball                     generate tar file (assuming encap is enabled)"
	@ echo "  debian                      generate debian file (assuming encap is enabled)"
	@ echo "  clean                       remove all generated files except makefiles"
	@ echo "  distclean                   remove all generated files"
	@ echo "  help                        show this help"
	@ echo "  status                      show options used with 'configure'"
	@ echo "  configure-help              show help for 'configure'"
	@ echo "  reconfigure                 re-run configure with same options"
	@ echo ""
	@ echo "options:"
	@ echo "      IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "      RemakeAllDocumentation=true    remake all documentation"
	@ echo "      CheckDocumentation=false       don't check documentation for completeness"
	@ echo "      RerunExamples=true             rerun example output files"
	@ echo "      debugLevel=1                   turn on further M2 debugging output"
	@ echo "      MAPFILE=yes                    create a mapfile when linking M2"
	@ echo ""
	@ echo "./config.status options:"
	@ echo ""
	@ echo "      --recheck                       re-run configure with same options"
	@ echo ""

# Local Variables:
# compile-command: "make -C $M2BUILDDIR"
# End:
