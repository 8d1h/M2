# @configure_input@
include include/config.Makefile
VPATH = @srcdir@

.PRECIOUS: @srcdir@/configure config.status
.PHONY: install all clean distclean reconfigure reconfigure-libs reconfigure-all configure-help install-others install-Macaulay2 everything

CONFIG_FILES = @srcdir@/configure @srcdir@/config/install-sh @srcdir@/config/config.sub @srcdir@/config/config.guess @srcdir@/config/files

GNUmakefile : GNUmakefile.in; ./config.status GNUmakefile

include/config.Makefile: include/config.Makefile.in ; ./config.status include/config.Makefile
# include/config.Makefile depends on ./config.status, too, but we are including it
# it's enought that include/config.h depends on ./config.status
all :: include/config.Makefile

include/config.h: include/config.h.in ./config.status ; ./config.status include/config.h
all :: include/config.h

@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files
	$(MAKE) -C @srcdir@ -f Makefile
	@echo '-----------------------------------------------------------------------------'
	@echo '# $@ has just been remade'
	@echo '#  Exiting so you can run it again the same way you did before.'
	@echo '#  Here is the way you ran it before:'
	@echo '#'
	@echo "     @CONFIG_CMD@"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1
subst : config.status ; ./config.status

show : config.status ; egrep '^s,' $< | sed -e 's/^s,@\(.*\)@,\(.*\),g/\1=\2/' -e 's/^s,.*]\*\(.*\)\\).*\\2 \(.*\) ,/#define \1 \2/' -e 's/.#_!!_#.//g'

status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  Here is the way you ran $^ before:'
	@echo '#'
	@echo "     @CONFIG_CMD@"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
config.status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '# error: $@ not there or older than $^'
	@echo '#  Exiting so you can run $^ the same way you did before.'
	@echo '#  Here is the way you ran it before:'
	@echo '#'
	@echo "     @CONFIG_CMD@"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1

distclean:: clean

reconfigure:: $(CONFIG_FILES)
	./config.status --recheck
	./config.status
	@ echo "============================================================================="
	@ echo "warning: to reconfigure the libraries, use 'make reconfigure-libs' or 'make reconfigure-all'"
	@ echo "============================================================================="
configure-help: $(CONFIG_FILES)
	@ @srcdir@/configure --help

# announcement only:
install all clean distclean install-others install-Macaulay2 ::
	@echo '-------- making '$@', @PACKAGE_VERSION@ for ARCH=@ARCH@ OS=@OS@ REL=@REL@ --------'

# first install target, the only place in the tree where 'all' is a prerequisite of 'install', hopefully.
install install-others install-Macaulay2 :: all
ifeq "$(CC)" "cl"
all:: ;	$(MAKE) -C WindowsNT
endif
all check ::; $(MAKE) -C libraries $@
all distclean check clean install install-others install-Macaulay2 :: ; $(MAKE) -C Macaulay2 $@
all::; $(MAKE) -C Macaulay2 doc
DIRS := $(target) @encapdir@/@bindirtail@ @encapdir@/@mandirtail@/man1 @encapdir@/@emacsdirtail@ @encapdir@/@corem2srcdirtail@ @encapdir@/@docpackagesdirtail@
install install-others install-Macaulay2 :: $(DIRS)
$(DIRS) :; $(INSTALL) -d $@

tarball: tarball.@COMPRESS@
tarball.gz: tarball.tgz
tarballs: tarball.bz2 tarball.tgz

EXCLUDES := --exclude=".nfs*" --exclude="Macaulay2-*-data"

tarball.bz2 : @PKG_TBZ@
@PKG_TBZ@  : always
ifneq (@FAKEROOT@,)
	@FAKEROOT@ chown -R root.root $(prefix)/@package@
endif
	@FAKEROOT@ tar cfh @PKG_TBZ@ --bzip $(EXCLUDES) -C $(prefix) @package@

tarball.tgz  : @PKG_TGZ@
@PKG_TGZ@  : always
ifneq (@FAKEROOT@,)
	@FAKEROOT@ chown -R root.root $(prefix)/@package@
endif
	@FAKEROOT@ tar cfh @PKG_TGZ@ --gzip $(EXCLUDES) -C $(prefix) @package@

always :

src-files : src-files ; svn ls -R @srcdir@ | egrep -v '/$$' | sed 's=^=@package@/=' <$< >$@
@package@ : GNUmakefile ; rm -f $@ && ln -sf @srcdir@ $@
mkrt : src-files @package@
ifneq (@FAKEROOT@,)
	cat src-files | @FAKEROOT@ xargs chown root.root
endif
@SRC_TGZ@ : mkrt ; @FAKEROOT@ tar cfz $@ --files-from=src-files
@SRC_TBZ@ : mkrt ; @FAKEROOT@ tar cfj $@ --files-from=src-files
src : @SRC_TZ@

ifeq "@M2TARFILE@" "yes"
install :: tarball
endif
clean ::; rm -f @PKG_TGZ@ @PKG_TBZ@

ifeq "@DEBIAN@" "yes"
install :: debian
check :: ; $(MAKE) -C debian $@
endif
debian : @PKG_TGZ@ ; $(MAKE) -C debian install
clean distclean :: ; $(MAKE) -C debian $@

ifeq "@RPM@" "yes"
install :: rpm
endif
rpm : @PKG_TGZ@ ; $(MAKE) -C rpm install
clean distclean :: ; $(MAKE) -C rpm $@

ifeq "@CYGWIN@" "yes"
install :: cygwin
endif
cygwin : @PKG_TGZ@ ; $(MAKE) -C cygwin install
clean distclean :: ; $(MAKE) -C cygwin $@

relink:
	rm -f Macaulay2/bin/M2@EXE@
	$(MAKE) -C Macaulay2/d ../bin/M2@EXE@
relink-nostrip:
	rm -f Macaulay2/bin/M2@EXE@
	$(MAKE) -C Macaulay2/d STRIP=no ../bin/M2@EXE@

install install-others install-Macaulay2 all clean distclean::; @echo "-------- done making '$@' --------"
install all::
	@echo "************************************************"
	@echo "*                                              *"
	@echo "*    don't forget to run 'make -k check'       *"
	@echo "*                                              *"
	@echo "************************************************"

RerunExamples = false

reconfigure-all : reconfigure reconfigure-libs 
reconfigure-libs ::; $(MAKE) -C libraries reconfigure
clean distclean ::; $(MAKE) -C libraries $@
install ::; $(MAKE) -C libraries final-install
distclean::; rm -f @CONFIGURED_FILES@ include/config.h include/config.Makefile config.cache config.log config.status configure.options

help :
	@ echo "usage: make [option...] [target...]"
	@ echo ""
	@ echo "targets:"
	@ echo "  all                         build/compile all files [the default target]"
	@ echo "  help                        show this help"
	@ echo "  relink                      remove Macaulay2/bin/M2@EXE@ and rebuild it"
	@ echo "  install                     generate the documentation, install all files"
	@ echo "    install-Macaulay2         install just the Macaulay2 package"
	@ echo "    install-others            install just the other packages"
	@ echo "  check                       run the tests"
	@ echo "  distributions:"
	@ echo "    src                       generate source tar file"
	@ echo "    tarball                   generate binary tar file"
	@ echo "    debian                    generate debian file"
	@ echo "    rpm                       generate rpm file"
	@ echo "    cygwin                    generate cygwin package files (3)"
	@ echo "  clean                       remove all generated files except makefiles"
	@ echo "  distclean                   remove all generated files"
	@ echo "  configuration:"
	@ echo "    status                    show options used with 'configure'"
	@ echo "    configure-help            show help for 'configure'"
	@ echo "    reconfigure               re-run configure for M2 with same options"
	@ echo "    reconfigure-libs          re-run configure on the libraries"
	@ echo "    reconfigure-all           re-run configure on everything"
	@ echo "    subst                     re-run config.status, remaking the makefiles"
	@ echo "    show                      show configuration variable values"
	@ echo ""
	@ echo "options:"
	@ echo "      IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "      RemakeAllDocumentation=true    remake all documentation"
	@ echo "      CheckDocumentation=false       don't check documentation for completeness"
	@ echo "      RerunExamples=true             rerun example output files"
	@ echo "      debugLevel=1                   turn on further M2 debugging output"
	@ echo "      MAPFILE=yes                    create a mapfile when linking M2"
	@ echo ""
	@ echo "./config.status options:"
	@ echo ""
	@ echo "      --recheck                       re-run configure with same options"
	@ echo ""

# Local Variables:
# compile-command: "make -C $M2BUILDDIR"
# End:
