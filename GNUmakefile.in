# @configure_input@
include include/config.Makefile
VPATH = @srcdir@
.PRECIOUS:@srcdir@/configure config.status
.PHONY:reconfigure-libs reconfigure-all configure-help report-M2-location help scripts
all:check-make check-machine configured check-vars srcdir protect-configs include/config.Makefile include/M2/config.h all-dirs report-M2-location
check-make:
	: '  Use list of GNU "make" features to check whether this version is modern enough (version 3.81 is).  '
	: '  (The order-only feature is just a proxy.)  '
	echo "$(.FEATURES)" | grep order-only >/dev/null
configured:include/configuration
include/configuration: config.status; ./config.status
check:configured check-dirs
check-machine:
	: make sure we are running on the same type of machine we were configured for, roughly
	[ "@UNAME_INFO@" = "` uname -pmso 2>/dev/null || uname -pms `" ]
clean:clean-dirs
	rm -f srcdir .link-test srcdir confdefs.h configure.lineno conftest.* include/config.h
	rm -rf StagingArea conf_*
	rm -f pre-install.sh post-install.sh normal-install.sh
distclean:clean distclean-dirs
	rm -f @CONFIGURED_FILES@ include/M2/config.h include/config.Makefile config.cache config.log configure.options config.status
	@FIND@ . -type d -empty -not -wholename '*/.svn/*' -delete 
define do-dirs
$1-dirs:
	$$(MAKE) -C libraries $1 $2
	$$(MAKE) -C Macaulay2 $1 $2
	$$(MAKE) -C distributions $1 $2
	$$(MAKE) -C check-configure $1 $2
endef
$(foreach t,all check clean distclean,$(eval $(call do-dirs,$t)))
install:configured normal all; $(MAKE) -C distributions $@
normal:;$(NORMAL_INSTALL) 
scripts: pre-install.sh post-install.sh
MI = $(MAKE) -s --no-print-directory -n install -o all PRE_INSTALL=turn-off POST_INSTALL=turn-off NORMAL_INSTALL=turn-off
pre-install.sh    : install-scripts.awk ; $(MI) PRE_INSTALL=turn-on |gawk -f $^ >$@
post-install.sh   : install-scripts.awk ; $(MI) POST_INSTALL=turn-on |gawk -f $^ >$@
normal-install.sh : install-scripts.awk ; $(MI) NORMAL_INSTALL=turn-on |gawk -f $^ >$@
GNUmakefile : GNUmakefile.in; ./config.status GNUmakefile
include/config.Makefile: include/config.Makefile.in ; ./config.status include/config.Makefile
include/M2/config.h: include/M2/config.h.in ./config.status ; ./config.status include/M2/config.h
@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files
	$(MAKE) -C @srcdir@ -f Makefile
	@echo '-----------------------------------------------------------------------------'
	@echo '# $@ has just been remade'
	@echo '#  Exiting so you can run it again the same way you did before.'
	@echo '-----------------------------------------------------------------------------'
	@$(MAKE) status
	@exit 1
config.status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '# error: $@ not there or older than $^'
	@echo '#  Exiting so you can run $^ the same way you did before.'
	@$(MAKE) status
	@exit 1
status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  Here is the way you ran $^ before:'
	@echo '#'
	@echo "     @CONFIG_CMD@"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
srcdir: GNUmakefile
	: creating or removing symbolic link to common staging area, if necessary,
	: based on comparision of these directories:
	:                      pre_prefix : @pre_prefix@
	: abs_builddir/StagingArea/common : @abs_builddir@/StagingArea/common
	@ if [ "@abs_builddir@"/StagingArea/common != "@pre_prefix@" ] ;\
	then (set -x ;\
	     rm -rf StagingArea/common ;\
	     $(MKDIR_P) StagingArea ;\
	     ln -s "@pre_prefix@" StagingArea/common) ;\
	else \
	     if [ -L "@abs_builddir@"/StagingArea/common ] ;\
	     then (set -x ;\
		   rm StagingArea/common ;\
		  ) ;\
	     fi ;\
	fi
	rm -f $@ .link-test
	echo "@srcdir@/" >$@
subst : config.status ; ./config.status
show : config.status ; egrep '^s,' $< | sed -e 's/^s,@\(.*\)@,\(.*\),g/\1=\2/' -e 's/^s,.*]\*\(.*\)\\).*\\2 \(.*\) ,/#define \1 \2/' -e 's/.#_!!_#.//g'
CONFIG_FILES = @srcdir@/configure @srcdir@/config/install-sh @srcdir@/config/config.sub @srcdir@/config/config.guess @srcdir@/config/files
reconfigure: recheck check-vars protect-configs
recheck: $(CONFIG_FILES)
	./config.status --recheck && ./config.status
	@ echo "============================================================================="
	@ echo "warning: to reconfigure the libraries, use 'make reconfigure-libs' or 'make reconfigure-all'"
	@ echo "============================================================================="
protect-configs:; chmod a-w $(shell cat @srcdir@/config/files)
check-vars:
	: "checking for strings that look like unsubstituted configure variables in all *.in files..."
	@ ! egrep -nH '@[A-Za-z_]+@' $(shell cat @srcdir@/config/files) | sed -e 's=^\([^:]*\):=@srcdir@/\1.in:='  | egrep .
configure-help: $(CONFIG_FILES) ; @ @srcdir@/configure --help
relink: ; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d @pre_exec_prefix@/bin/M2@EXE@
relink-nostrip: ; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d STRIP=no @pre_exec_prefix@/bin/M2@EXE@
reconfigure-all : reconfigure reconfigure-libs 
reconfigure-libs :; $(MAKE) -C libraries reconfigure
report-M2-location:
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
	: Macaulay 2 executable location:
	:    @pre_bindir@/M2@EXE@
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
help :
	@ echo "Macaulay 2 version @PACKAGE_VERSION@"
	@ echo ""
	@ echo "make files configured with:"
	@ echo "    OS=@OS@ REL=@REL@ ISSUE=@ISSUE@ ARCH=@ARCH@ STATIC=@STATIC@"
	@ echo "    DEBUG=@DEBUG@ OPTIMIZE=@OPTIMIZE@ ENCAP=@ENCAP@"
	@ echo ""
	@ echo "Macaulay 2 executable location:"
	@ echo "   @pre_bindir@/M2@EXE@"
	@ echo ""
	@ echo "usage: make ..."
	@ echo ""
	@ echo "targets:"
	@ echo "  all               build/compile all files and distributions [the default target]"
	@ echo "  install -o all    install files (without re-making them)"
	@ echo "  relink            remove M2@EXE@ and rebuild it"
	@ echo "  relink-nostrip    remove M2@EXE@ and rebuild it, unstripped"
	@ echo "  install           make and install files"
	@ echo "  check             run the tests"
	@ echo "  clean             remove all generated files except configured files"
	@ echo "  distclean         remove all generated files"
	@ echo "  help              show this help"
	@ echo ""
	@ echo "configuration display:"
	@ echo "  status                    show options used with 'configure'"
	@ echo "  configure-help            show help for 'configure'"
	@ echo "  reconfigure               re-run configure for M2 with same options"
	@ echo "  reconfigure-libs          re-run configure on the libraries"
	@ echo "  reconfigure-all           re-run configure on everything"
	@ echo "  subst                     re-run config.status, remaking the makefiles"
	@ echo "  show                      show configuration variable values"
	@ echo ""
	@ echo "package options:"
	@ echo "  PACKAGES='Foo Bar'             the list of packages to process"
	@ echo "  IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "  RemakePackages=true            remake the packages"
	@ echo "  RemakeAllDocumentation=true    remake all documentation"
	@ echo "  CheckDocumentation=false       don't check documentation for completeness"
	@ echo "  RerunExamples=true             rerun example output files"
	@ echo "  debugLevel=1                   turn on further M2 debugging output"
	@ echo ""
	@ echo "make install options:"
	@ echo "  prefix=...          installation prefix"
	@ echo "                      (currently ${prefix})"
	@ echo "  exec_prefix=...     installation prefix for architecture dependent files"
	@ echo "                      (currently ${exec_prefix})"
	@ echo "  ENCAP=yes           install in ${prefix}/@package@ instead"
	@ echo "  MAPFILE=yes         create a mapfile when linking M2"
	@ echo "  DESTDIR=/Foo/Bar    install in /Foo/Bar${prefix} instead"
# Local Variables:
# compile-command: "make -C $M2BUILDDIR "
# End:
