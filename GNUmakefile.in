# @configure_input@
include include/config.Makefile
VPATH = @srcdir@

all:stage2
stage2::stage1
install:normal all; $(MAKE) -C distributions $@
normal:;$(NORMAL_INSTALL) 

# experimental
.PHONY : scripts
scripts : pre-install.sh post-install.sh
clean::rm-scripts
rm-scripts:;rm -f pre-install.sh post-install.sh normal-install.sh
MI = $(MAKE) -s --no-print-directory -n install -o all PRE_INSTALL=turn-off POST_INSTALL=turn-off NORMAL_INSTALL=turn-off
pre-install.sh    : install-scripts.awk ; $(MI) PRE_INSTALL=turn-on |gawk -f $^ >$@
post-install.sh   : install-scripts.awk ; $(MI) POST_INSTALL=turn-on |gawk -f $^ >$@
normal-install.sh : install-scripts.awk ; $(MI) NORMAL_INSTALL=turn-on |gawk -f $^ >$@
#



.PRECIOUS: @srcdir@/configure config.status
.PHONY: reconfigure-libs reconfigure-all configure-help
# make sure we're ready to go
GNUmakefile : GNUmakefile.in; ./config.status GNUmakefile
include/config.Makefile: include/config.Makefile.in ; ./config.status include/config.Makefile
# include/config.Makefile depends on ./config.status, too, but we are including it
# it's enough that include/M2/config.h depends on ./config.status
stage1:: include/config.Makefile
include/M2/config.h: include/M2/config.h.in ./config.status ; ./config.status include/M2/config.h
stage1:: include/M2/config.h
@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files
	$(MAKE) -C @srcdir@ -f Makefile
	@echo '-----------------------------------------------------------------------------'
	@echo '# $@ has just been remade'
	@echo '#  Exiting so you can run it again the same way you did before.'
	@echo '-----------------------------------------------------------------------------'
	@$(MAKE) status
	@exit 1
config.status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '# error: $@ not there or older than $^'
	@echo '#  Exiting so you can run $^ the same way you did before.'
	@$(MAKE) status
	@exit 1
status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  Here is the way you ran $^ before:'
	@echo '#'
	@echo "     @CONFIG_CMD@"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
# the first distclean target:
distclean:: clean
stage2 clean distclean stage1 ::; $(MAKE) -C libraries $@
stage1:: srcdir
clean::; rm -rf srcdir .link-test StagingArea srcdir
srcdir: GNUmakefile
	if [ "@abs_builddir@"/StagingArea/common != "@pre_prefix@" ] ;\
	then rm -rf StagingArea/common ;\
	     $(MKDIR_P) StagingArea ;\
	     ln -s "@pre_prefix@" StagingArea/common ;\
	fi
	rm -f $@ .link-test
	echo "@srcdir@/" >$@
stage2 stage1 distclean check clean ::; $(MAKE) -C Macaulay2 $@
subst : config.status ; ./config.status
show : config.status ; egrep '^s,' $< | sed -e 's/^s,@\(.*\)@,\(.*\),g/\1=\2/' -e 's/^s,.*]\*\(.*\)\\).*\\2 \(.*\) ,/#define \1 \2/' -e 's/.#_!!_#.//g'
CONFIG_FILES = @srcdir@/configure @srcdir@/config/install-sh @srcdir@/config/config.sub @srcdir@/config/config.guess @srcdir@/config/files
reconfigure:: $(CONFIG_FILES)
	./config.status --recheck && ./config.status
	@ echo "============================================================================="
	@ echo "warning: to reconfigure the libraries, use 'make reconfigure-libs' or 'make reconfigure-all'"
	@ echo "============================================================================="
reconfigure stage1 ::; chmod a-w $(shell cat @srcdir@/config/files)
check-vars reconfigure stage1 check ::; ! egrep -nH '@[A-Za-z_]+@' $(shell cat @srcdir@/config/files) | sed -e 's=^\([^:]*\):=@srcdir@/\1.in:='  | egrep .
configure-help: $(CONFIG_FILES) ; @ @srcdir@/configure --help
relink: ; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d @pre_exec_prefix@/bin/M2@EXE@
relink-nostrip: ; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d STRIP=no @pre_exec_prefix@/bin/M2@EXE@
stage1 dist clean distclean check stage2 :: ; $(MAKE) -C distributions $@
check ::; $(MAKE) -C libraries $@
distclean check ::; $(MAKE) -C check-configure -f Makefile $@
reconfigure-all : reconfigure reconfigure-libs 
reconfigure-libs ::; $(MAKE) -C libraries reconfigure
clean::; rm -f confdefs.h configure.lineno conftest.* include/config.h
distclean::; rm -f @CONFIGURED_FILES@ include/M2/config.h include/config.Makefile config.cache config.log config.status configure.options
.PHONY all:report-M2-location
report-M2-location:
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
	: Macaulay 2 executable location:
	:    @bindir@/M2@EXE@
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
help :
	@ echo "Macaulay 2 version @PACKAGE_VERSION@"
	@ echo ""
	@ echo "make files configured with:"
	@ echo "    OS=@OS@ REL=@REL@ ISSUE=@ISSUE@ ARCH=@ARCH@ STATIC=@STATIC@"
	@ echo "    DEBUG=@DEBUG@ OPTIMIZE=@OPTIMIZE@ ENCAP=@ENCAP@"
	@ echo ""
	@ echo "Macaulay 2 executable location:"
	@ echo "   @bindir@/M2@EXE@"
	@ echo ""
	@ echo "usage: make ..."
	@ echo ""
	@ echo "targets:"
	@ echo "  all               build/compile all files and distributions [the default target]"
	@ echo "  install -o all    install files (without re-making them)"
	@ echo "  relink            remove M2@EXE@ and rebuild it"
	@ echo "  relink-nostrip    remove M2@EXE@ and rebuild it, unstripped"
	@ echo "  install           make and install files"
	@ echo "  check             run the tests"
	@ echo "  clean             remove all generated files except configured files"
	@ echo "  distclean         remove all generated files"
	@ echo "  help              show this help"
	@ echo ""
	@ echo "configuration display:"
	@ echo "  status                    show options used with 'configure'"
	@ echo "  configure-help            show help for 'configure'"
	@ echo "  reconfigure               re-run configure for M2 with same options"
	@ echo "  reconfigure-libs          re-run configure on the libraries"
	@ echo "  reconfigure-all           re-run configure on everything"
	@ echo "  subst                     re-run config.status, remaking the makefiles"
	@ echo "  show                      show configuration variable values"
	@ echo ""
	@ echo "package options:"
	@ echo "  PACKAGES='Foo Bar'             the list of packages to process"
	@ echo "  IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "  RemakePackages=true            remake the packages"
	@ echo "  RemakeAllDocumentation=true    remake all documentation"
	@ echo "  CheckDocumentation=false       don't check documentation for completeness"
	@ echo "  RerunExamples=true             rerun example output files"
	@ echo "  debugLevel=1                   turn on further M2 debugging output"
	@ echo ""
	@ echo "make install options:"
	@ echo "  prefix=...          installation prefix"
	@ echo "                      (currently ${prefix})"
	@ echo "  exec_prefix=...     installation prefix for architecture dependent files"
	@ echo "                      (currently ${exec_prefix})"
	@ echo "  ENCAP=yes           install in ${prefix}/@package@ instead"
	@ echo "  MAPFILE=yes         create a mapfile when linking M2"
	@ echo "  DESTDIR=/Foo/Bar    install in /Foo/Bar${prefix} instead"

# Local Variables:
# compile-command: "make -C $M2BUILDDIR "
# End:
