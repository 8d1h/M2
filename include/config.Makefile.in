# @configure_input@

# every makefile that includes this one should use 'all' as the
# default (first) target
all::

# cygwin 'make' might get confused by setting SHELL
# SHELL = @SHELL@

.DELETE_ON_ERROR :

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

package = Macaulay2-$(PACKAGE_VERSION)
ARCH    = @ARCH@
OS      = @OS@
REL     = @REL@

DESC    = @PACKAGE_VERSION@-@host_cpu@-@OS@-@REL@
# we used to use @ ARCH @ instead of @ host_cpu @ here, but for DEC alphas,
# and perhaps other machines, it gives more information.  The script
# config.guess assembles host_cpu from /proc/cpuinfo, and can be something
# like "alphaev6" or "alphaev56", but ARCH, which is determined from 'uname'
# by the 'configure' script, will be simply "alpha".

DUMPDATA = @DUMPDATA@
NODENAME = @NODENAME@
PROFILE = @PROFILE@
STRIP = @STRIP@
OPTIMIZE = @OPTIMIZE@
DEBUG = @DEBUG@
MEMDEBUG = @MEMDEBUG@
VERBOSE = @VERBOSE@
STATIC = @STATIC@
GC_FOR_NEW = @GC_FOR_NEW@

CC = @CC@
GCC = @GCC@
CXX = @CXX@
YACC = @YACC@
AWK = @AWK@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXXFLAGS = @CXXFLAGS@
FFLAGS = @FFLAGS@
LDFLAGS = @LDFLAGS@
LOADLIBES = @LOADLIBES@
LDLIBS = @LDLIBS@
LAPACK = @LAPACK@
encap = @encap@
encapsrc = @encapsrc@
LIBGMP = @LIBGMP@

# See the autoconf documentation for a description of LIBS, which autoconf uses at configure time for checking for features
# Hence we have to use it, too.
LDLIBS += @LIBS@

# See the autoconf documentation for a description of DEFS; we use incldue/config.h instead, to keep command lines short
DEFS = @DEFS@

M2PKGNAME = PackageName

# Macaulay 2 file system layout definitions, dependent on $(prefix) defined
# above and on $(M2PKGNAME) undefined above.
#  see http://www.pathname.com/fhs/
#      http://fink.sourceforge.net/doc/packaging/fslayout.php
#      http://cr.yp.to/unix.html, the section on "Filesystem layout"

binRelDir = bin
libRelDir = lib
dataRelDir = share
manRelDir = $(dataRelDir)/man
man1RelDir = $(manRelDir)/man1
man3RelDir = $(manRelDir)/man3
emacsRelDir = $(dataRelDir)/emacs/site-lisp
docRelDir = $(dataRelDir)/doc
docm2RelDir = $(docRelDir)/Macaulay2
packagesRelDir = $(dataRelDir)/Macaulay2/packages
docpackagesRelDir = $(docm2RelDir)/packages
packagesrcRelDir = $(packagesRelDir)/$(M2PKGNAME)
packagedocRelDir = $(docpackagesRelDir)/$(M2PKGNAME)
packageimagesRelDir = $(packagedocRelDir)/images
packagetestsRelDir = $(packagedocRelDir)/tests
packagehtmlRelDir = $(packagedocRelDir)/html
packageexamplesRelDir = $(packagedocRelDir)/examples
libm2RelDir = $(libRelDir)/Macaulay2/$(PACKAGE_VERSION)
cacheRelDir = $(libm2RelDir)/cache
datam2RelDir = $(dataRelDir)/Macaulay2
shareRelDir = $(datam2RelDir)/$(PACKAGE_VERSION)
m2RelDir = $(shareRelDir)/m2
docm2relRelDir = $(docm2RelDir)/$(PACKAGE_VERSION)
emacsdocRelDir = $(docm2relRelDir)/emacs
htmldocRelDir = $(docm2relRelDir)/html
imagesRelDir = $(docm2relRelDir)/images

prefix = @prefix@
bindir = $(prefix)/$(binRelDir)
libdir = $(prefix)/$(libRelDir)
datadir = $(prefix)/$(dataRelDir)
mandir = $(prefix)/$(manRelDir)
man1dir = $(prefix)/$(man1RelDir)
man3dir = $(prefix)/$(man3RelDir)
emacsdir = $(prefix)/$(emacsRelDir)
docdir = $(prefix)/$(docRelDir)
docm2dir = $(prefix)/$(docm2RelDir)
packagesdir = $(prefix)/$(packagesRelDir)
docpackagesdir = $(prefix)/$(docpackagesRelDir)
libm2dir = $(prefix)/$(libm2RelDir)
cachedir = $(prefix)/$(cacheRelDir)
datam2dir = $(prefix)/$(datam2RelDir)
sharedir = $(prefix)/$(shareRelDir)
m2dir = $(prefix)/$(m2RelDir)
docm2reldir = $(prefix)/$(docm2relRelDir)
emacsdocdir = $(prefix)/$(emacsdocRelDir)
htmldocdir = $(prefix)/$(htmldocRelDir)
imagesdir = $(prefix)/$(imagesRelDir)
packagesrcdir = $(prefix)/$(packagesrcRelDir)
packagedocdir = $(prefix)/$(packagedocRelDir)
packageimagesdir = $(prefix)/$(packageimagesRelDir)
packagetestsdir = $(prefix)/$(packagetestsRelDir)
packagehtmldir = $(prefix)/$(packagehtmlRelDir)
packageexamplesdir = $(prefix)/$(packageexamplesRelDir)

MAKEFUN = "$(1)" => $(M2PKGNAME) -> "$(subst $(M2PKGNAME),"|$(M2PKGNAME)|",$($(1)RelDir))/"

LAYOUT := {
LAYOUT += "bin"=>"$(binRelDir)/",
LAYOUT += "lib"=>"$(libRelDir)/",
LAYOUT += "data"=>"$(dataRelDir)/",
LAYOUT += "man"=>"$(manRelDir)/",
LAYOUT += "man1"=>"$(man1RelDir)/",
LAYOUT += "man3"=>"$(man3RelDir)/",
LAYOUT += "emacs"=>"$(emacsRelDir)/",
LAYOUT += "doc"=>"$(docRelDir)/",
LAYOUT += "docm2"=>"$(docm2RelDir)/",
LAYOUT += "packages" => "$(packagesRelDir)/",
LAYOUT += "docpackages"=>"$(docpackagesRelDir)/",
LAYOUT += "libm2"=>"$(libm2RelDir)/",
LAYOUT += "cache"=>"$(cacheRelDir)/",
LAYOUT += "datam2"=>"$(datam2RelDir)/",
LAYOUT += "share"=>"$(shareRelDir)/",
LAYOUT += "m2"=>"$(m2RelDir)/",
LAYOUT += "docm2rel"=>"$(docm2relRelDir)/",
LAYOUT += "emacsdoc"=>"$(emacsdocRelDir)/",
LAYOUT += "htmldoc"=>"$(htmldocRelDir)/",
LAYOUT += "images"=>"$(imagesRelDir)/",
LAYOUT += $(call MAKEFUN,packagesrc),
LAYOUT += $(call MAKEFUN,packagedoc),
LAYOUT += $(call MAKEFUN,packageimages),
LAYOUT += $(call MAKEFUN,packagetests),
LAYOUT += $(call MAKEFUN,packagehtml),
LAYOUT += $(call MAKEFUN,packageexamples)
LAYOUT += }

# end file system layout

RANLIB = @RANLIB@
AR = ar

MAKEFLAGS += -w

ifdef CYGWIN32
# CFLAGS += '-Dabort()=exit(1)'
# CXXFLAGS += '-Dabort()=exit(1)'
# this approach to fixing "abort" doesn't work because of a slight
# bug in configure/makeconf - strings here get evaluated by the
# shell a different number of times between now and
#   (1) the evaluation of the test compilations in factory/configure
#   (2) the evaluation of the compilations in factory/GNUmakefile
# and thus it is impossible to shield the parentheses from the shell.
# A fix is for all expressions in factory/configure like 
#	eval $ac_compile
# to be replaced by expressions like
#	eval `eval "echo $ac_compile"`
endif

ifeq "$(OS) $(ARCH)" "Linux alpha"
AS = gcc -c -x assembler-with-cpp
endif

ifeq "$(CC)" "cl"
include config.Microsoft
endif

DEBUGFLAGS :=

ifeq "$(DEBUG)" "yes"
DEBUGFLAGS += -DDEBUG
else
DEBUGFLAGS += -DNDEBUG
endif

ifeq "$(PROFILE)" "yes"
CFLAGS   += -pg
CXXFLAGS += -pg
LDFLAGS  += -pg
STRIP := no
endif

ifeq "$(GCC)" "yes"
CFLAGS   += -Wall -Wshadow -Wcast-qual -Wno-parentheses
CXXFLAGS += -Wall -Wshadow -Wcast-qual -Wno-parentheses
ifeq "$(OPTIMIZE)" "yes"
CFLAGS   += -O3 -fexpensive-optimizations
CXXFLAGS += -O3 -fexpensive-optimizations
else
CFLAGS   += -O0
CXXFLAGS += -O0
endif
endif

ifeq "$(STRIP)" "no"
STRIPCMD := :
else
ifneq "$(CC)" "cl"
# -fomit-frame-pointer causes strange bugs!
# CFLAGS   += -fomit-frame-pointer
# CXXFLAGS += -fomit-frame-pointer
LDFLAGS  += -s
STRIPCMD := strip
endif
endif

ifeq "$(OS)" "CYGWIN_NT-5.0"
EXE := .exe
else
EXE :=
endif

ifeq "$(MEMDEBUG)" "yes"
DEBUGFLAGS += -DMEM_DEBUG
endif

DUMPDATAFILE := cache/Macaulay2-$(ARCH)-data

ifneq "$(prefix)" "/usr"
ifneq "$(prefix)" "/usr/local"
CPPFLAGS += -I$(prefix)/include
LDFLAGS += -L$(prefix)/lib
endif
endif

# Local Variables:
# compile-command: "make -f Makefile-configuration"
# End:
