# @configure_input@

# every makefile that includes this one should use 'all' as the
# default (first) target
all::

# cygwin 'make' might get confused by setting SHELL
# SHELL = @SHELL@

.DELETE_ON_ERROR :

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

package = Macaulay2-$(PACKAGE_VERSION)
ARCH    = @ARCH@
OS      = @OS@
REL     = @REL@

DESC    = @PACKAGE_VERSION@-@host_cpu@-@OS@-@REL@
# we used to use @ ARCH @ instead of @ host_cpu @ here, but for DEC alphas,
# and perhaps other machines, it gives more information.  The script
# config.guess assembles host_cpu from /proc/cpuinfo, and can be something
# like "alphaev6" or "alphaev56", but ARCH, which is determined from 'uname'
# by the 'configure' script, will be simply "alpha".

DUMPDATA = @DUMPDATA@
NODENAME = @NODENAME@
PROFILE = @PROFILE@
STRIP = @STRIP@
OPTIMIZE = @OPTIMIZE@
DEBUG = @DEBUG@
MEMDEBUG = @MEMDEBUG@
VERBOSE = @VERBOSE@
STATIC = @STATIC@
GC_FOR_NEW = @GC_FOR_NEW@

CC = @CC@
GCC = @GCC@
CXX = @CXX@
YACC = @YACC@
AWK = @AWK@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXXFLAGS = @CXXFLAGS@
FFLAGS = @FFLAGS@
DEFS = @DEFS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

encap = @encap@
encapdir = @encapdir@

ifeq "$(encap)" "yes"
prefix = $(encapdir)/$(package)
else
prefix = @prefix@
endif

# Macaulay 2 file system layout definitions, dependent on $(prefix) defined above :
#  see http://www.pathname.com/fhs/
#      http://fink.sourceforge.net/doc/packaging/fslayout.php
#      http://cr.yp.to/unix.html, the section on "Filesystem layout"

binRelDir = bin
libRelDir = lib
dataRelDir = share
manRelDir = $(dataRelDir)/man
man1RelDir = $(manRelDir)/man1
man3RelDir = $(manRelDir)/man3
emacsRelDir = $(dataRelDir)/emacs/site-lisp
docRelDir = $(dataRelDir)/doc
docm2RelDir = $(docRelDir)/Macaulay2
packagesRelDir = $(dataRelDir)/Macaulay2/packages
docpackagesRelDir = $(docm2RelDir)/packages
packagesrcRelDir = $(packagesRelDir)/PackageName
packagedocRelDir = $(docpackagesRelDir)/PackageName
packageimagesRelDir = $(packagedocRelDir)/images
packagetestsRelDir = $(packagedocRelDir)/tests
packagehtmlRelDir = $(packagedocRelDir)/html
libm2RelDir = $(libRelDir)/Macaulay2/$(PACKAGE_VERSION)
cacheRelDir = $(libm2RelDir)/cache
libexecRelDir = $(libm2RelDir)/libexec
datam2RelDir = $(dataRelDir)/Macaulay2
shareRelDir = $(datam2RelDir)/$(PACKAGE_VERSION)
m2RelDir = $(shareRelDir)/m2
docm2relRelDir = $(docm2RelDir)/$(PACKAGE_VERSION)
emacsdocRelDir = $(docm2relRelDir)/emacs
htmldocRelDir = $(docm2relRelDir)/html
imagesRelDir = $(docm2relRelDir)/images

LAYOUT := {

bindir = $(prefix)/$(binRelDir)
LAYOUT += "bin"=>"$(binRelDir)/",

libdir = $(prefix)/$(libRelDir)
LAYOUT += "lib"=>"$(libRelDir)/",

datadir = $(prefix)/$(dataRelDir)
LAYOUT += "data"=>"$(dataRelDir)/",

mandir = $(prefix)/$(manRelDir)
LAYOUT += "man"=>"$(manRelDir)/",

man1dir = $(prefix)/$(man1RelDir)
LAYOUT += "man1"=>"$(man1RelDir)/",

man3dir = $(prefix)/$(man3RelDir)
LAYOUT += "man3"=>"$(man3RelDir)/",

emacsdir = $(prefix)/$(emacsRelDir)
LAYOUT += "emacs"=>"$(emacsRelDir)/",

docdir = $(prefix)/$(docRelDir)
LAYOUT += "doc"=>"$(docRelDir)/",

docm2dir = $(prefix)/$(docm2RelDir)
LAYOUT += "docm2"=>"$(docm2RelDir)/",

packagesdir = $(prefix)/$(packagesRelDir)
LAYOUT += "packages" => "$(packagesRelDir)/",

docpackagesdir = $(prefix)/$(docpackagesRelDir)
LAYOUT += "docpackages"=>"$(docpackagesRelDir)/",

libm2dir = $(prefix)/$(libm2RelDir)
LAYOUT += "libm2"=>"$(libm2RelDir)/",

cachedir = $(prefix)/$(cacheRelDir)
LAYOUT += "cache"=>"$(cacheRelDir)/",

libexecdir = $(prefix)/$(libexecRelDir)
LAYOUT += "libexec"=>"$(libexecRelDir)/",

datam2dir = $(prefix)/$(datam2RelDir)
LAYOUT += "datam2"=>"$(datam2RelDir)/",

sharedir = $(prefix)/$(shareRelDir)
LAYOUT += "share"=>"$(shareRelDir)/",

m2dir = $(prefix)/$(m2RelDir)
LAYOUT += "m2"=>"$(m2RelDir)/",

docm2reldir = $(prefix)/$(docm2relRelDir)
LAYOUT += "docm2rel"=>"$(docm2relRelDir)/",

emacsdocdir = $(prefix)/$(emacsdocRelDir)
LAYOUT += "emacsdoc"=>"$(emacsdocRelDir)/",

htmldocdir = $(prefix)/$(htmldocRelDir)
LAYOUT += "htmldoc"=>"$(htmldocRelDir)/",

imagesdir = $(prefix)/$(imagesRelDir)
LAYOUT += "images"=>"$(imagesRelDir)/",

# options for packages are functions
MAKEFUN = "$(1)" => PackageName -> "$(subst PackageName,"|PackageName|",$($(1)RelDir))/"

packagesrcdir = $(prefix)/$(packagesrcRelDir)
LAYOUT += $(call MAKEFUN,packagesrc),

packagedocdir = $(prefix)/$(packagedocRelDir)
LAYOUT += $(call MAKEFUN,packagedoc),

packageimagesdir = $(prefix)/$(packageimagesRelDir)
LAYOUT += $(call MAKEFUN,packageimages),

packagetestsdir = $(prefix)/$(packagetestsRelDir)
LAYOUT += $(call MAKEFUN,packagetests),

packagehtmldir = $(prefix)/$(packagehtmlRelDir)
LAYOUT += $(call MAKEFUN,packagehtml)
# no comma on the last one (just above)

LAYOUT += }

# end file system layout

RANLIB = @RANLIB@
AR = ar

MAKEFLAGS += -w

ifdef CYGWIN32
# CFLAGS += '-Dabort()=exit(1)'
# CXXFLAGS += '-Dabort()=exit(1)'
# this approach to fixing "abort" doesn't work because of a slight
# bug in configure/makeconf - strings here get evaluated by the
# shell a different number of times between now and
#   (1) the evaluation of the test compilations in factory/configure
#   (2) the evaluation of the compilations in factory/GNUmakefile
# and thus it is impossible to shield the parentheses from the shell.
# A fix is for all expressions in factory/configure like 
#	eval $ac_compile
# to be replaced by expressions like
#	eval `eval "echo $ac_compile"`
endif

ifeq "$(OS) $(ARCH)" "Linux alpha"
AS = gcc -c -x assembler-with-cpp
endif

ifeq "$(CC)" "cl"
include config.Microsoft
endif

DEBUGFLAGS :=

ifeq "$(DEBUG)" "yes"
DEBUGFLAGS += -DDEBUG
else
DEBUGFLAGS += -DNDEBUG
endif

ifeq "$(PROFILE)" "yes"
CFLAGS   += -pg
CXXFLAGS += -pg
LDFLAGS  += -pg
STRIP := no
endif

ifeq "$(GCC)" "yes"
CFLAGS   += -Wall -Wshadow -Wcast-qual
CXXFLAGS += -Wall -Wshadow -Wcast-qual
ifeq "$(OPTIMIZE)" "yes"
CFLAGS   += -O3 -fexpensive-optimizations
CXXFLAGS += -O3 -fexpensive-optimizations
else
CFLAGS   += -O0
CXXFLAGS += -O0
endif
endif

ifeq "$(STRIP)" "no"
STRIPCMD := :
else
ifneq "$(CC)" "cl"
# -fomit-frame-pointer causes strange bugs!
# CFLAGS   += -fomit-frame-pointer
# CXXFLAGS += -fomit-frame-pointer
LDFLAGS  += -s
STRIPCMD := strip
endif
endif

ifeq "$(OS)" "CYGWIN_NT-5.0"
EXE := .exe
else
EXE :=
endif

ifeq "$(MEMDEBUG)" "yes"
DEBUGFLAGS += -DMEM_DEBUG
endif

DUMPDATAFILE := libexec/Macaulay2-$(ARCH)-data

ifneq "$(prefix)" "/usr"
CPPFLAGS += -I$(prefix)/include
LOADLIBES += -L$(prefix)/lib
endif

# Local Variables:
# compile-command: "make -f Makefile-configuration"
# End:
