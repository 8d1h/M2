# @configure_input@

# every makefile that includes this one should use 'all' as the
# default (first) target
all::

# the usual phony targets
.PHONY : all check initialize clean distclean install always reconfigure

# cygwin 'make' might get confused by setting SHELL
# SHELL = @SHELL@

.DELETE_ON_ERROR :

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

package = Macaulay2-$(PACKAGE_VERSION)
ARCH    = @ARCH@
OS      = @OS@
REL     = @REL@

DESC    = @PACKAGE_VERSION@-@host_cpu@-@OS@-@REL@
# we used to use @ ARCH @ instead of @ host_cpu @ here, but for DEC alphas,
# and perhaps other machines, it gives more information.  The script
# config.guess assembles host_cpu from /proc/cpuinfo, and can be something
# like "alphaev6" or "alphaev56", but ARCH, which is determined from 'uname'
# by the 'configure' script, will be simply "alpha".

DUMPDATA = @DUMPDATA@
NODENAME = @NODENAME@
PROFILE = @PROFILE@
FACTORY = @FACTORY@
STRIP = @STRIP@
OPTIMIZE = @OPTIMIZE@
DEBUG = @DEBUG@
MEMDEBUG = @MEMDEBUG@
VERBOSE = @VERBOSE@
STATIC = @STATIC@

CC = @CC@
GCC = @GCC@
CXX = @CXX@
YACC = @YACC@
AWK = @AWK@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXXFLAGS = @CXXFLAGS@
FFLAGS = @FFLAGS@
LDFLAGS = @LDFLAGS@
LOADLIBES = @LOADLIBES@
LDLIBS = @LDLIBS@
LAPACK = @LAPACK@
LAPACKLIBS = @LAPACKLIBS@
GMPLIB = @GMPLIB@
GCLIB = @GCLIB@
GDBMLIB = @GDBMLIB@
READLINELIB = @READLINELIB@
HISTORYLIB = @HISTORYLIB@
ENCAP = @ENCAP@
M2SUFFIX = @M2SUFFIX@
EXEEXT = @EXEEXT@
EXE = $(M2SUFFIX)$(EXEEXT)
CONFIG_ARG0 = @CONFIG_ARG0@
CONFIG_ARGS = @CONFIG_ARGS@

# See the autoconf documentation for a description of LIBS, which autoconf uses at configure time for checking for features
# Hence we have to use it, too.
LDLIBS += @LIBS@

# See the autoconf documentation for a description of DEFS; we use incldue/config.h instead, to keep command lines short
DEFS = @DEFS@

M2PKGNAME = PackageName

# Macaulay 2 file system layout definitions, dependent on $(prefix) defined
# above and on $(M2PKGNAME) undefined above.
#  see http://www.pathname.com/fhs/
#      http://fink.sourceforge.net/doc/packaging/fslayout.php
#      http://cr.yp.to/unix.html, the section on "Filesystem layout"

# this might have to get changed manually, but hopefully not:
MAINPACKAGE = Macaulay2Core

binRelDir = bin
libRelDir = lib
infoRelDir = info
dataRelDir = share
manRelDir = $(dataRelDir)/man
man1RelDir = $(manRelDir)/man1
man3RelDir = $(manRelDir)/man3
emacsRelDir = $(dataRelDir)/emacs/site-lisp
docRelDir = $(dataRelDir)/doc
docm2RelDir = $(docRelDir)/Macaulay2
packagesRelDir = $(dataRelDir)/Macaulay2
docpackagesRelDir = $(docm2RelDir)
packagesrcRelDir = $(packagesRelDir)/$(M2PKGNAME)
packagedocRelDir = $(docpackagesRelDir)/$(M2PKGNAME)
packageimagesRelDir = $(packagedocRelDir)/images
packagetestsRelDir = $(packagedocRelDir)/tests
packagehtmlRelDir = $(packagedocRelDir)/html
packagecacheRelDir = $(packagedocRelDir)/cache
packageexamplesRelDir = $(packagedocRelDir)/examples
libm2RelDir = $(libRelDir)/Macaulay2/$(MAINPACKAGE)
cacheRelDir = $(libm2RelDir)/cache
datam2RelDir = $(dataRelDir)/Macaulay2
shareRelDir = $(datam2RelDir)/$(MAINPACKAGE)
m2RelDir = $(shareRelDir)/m2
docm2relRelDir = $(docm2RelDir)/$(MAINPACKAGE)
emacsdocRelDir = $(docm2relRelDir)/emacs
imagesRelDir = $(docm2relRelDir)/images
styleRelDir = $(docm2relRelDir)/style

prefix = @prefix@

ifeq "$(ENCAP)" "yes"
encapdir = $(prefix)/$(package)
else
encapdir = $(prefix)/.
endif

bindir = $(encapdir)/$(binRelDir)
libdir = $(encapdir)/$(libRelDir)
infodir = $(encapdir)/$(infoRelDir)
datadir = $(encapdir)/$(dataRelDir)
mandir = $(encapdir)/$(manRelDir)
man1dir = $(encapdir)/$(man1RelDir)
man3dir = $(encapdir)/$(man3RelDir)
emacsdir = $(encapdir)/$(emacsRelDir)
docdir = $(encapdir)/$(docRelDir)
docm2dir = $(encapdir)/$(docm2RelDir)
packagesdir = $(encapdir)/$(packagesRelDir)
docpackagesdir = $(encapdir)/$(docpackagesRelDir)
libm2dir = $(encapdir)/$(libm2RelDir)
cachedir = $(encapdir)/$(cacheRelDir)
datam2dir = $(encapdir)/$(datam2RelDir)
sharedir = $(encapdir)/$(shareRelDir)
m2dir = $(encapdir)/$(m2RelDir)
docm2reldir = $(encapdir)/$(docm2relRelDir)
emacsdocdir = $(encapdir)/$(emacsdocRelDir)
imagesdir = $(encapdir)/$(imagesRelDir)
styledir = $(encapdir)/$(styleRelDir)
packagesrcdir = $(encapdir)/$(packagesrcRelDir)
packagedocdir = $(encapdir)/$(packagedocRelDir)
packageimagesdir = $(encapdir)/$(packageimagesRelDir)
packagetestsdir = $(encapdir)/$(packagetestsRelDir)
packagehtmldir = $(encapdir)/$(packagehtmlRelDir)
packagecachedir = $(encapdir)/$(packagecacheRelDir)
packageexamplesdir = $(encapdir)/$(packageexamplesRelDir)

MAKEFUN = "$(1)" => $(M2PKGNAME) -> "$(subst $(M2PKGNAME),"|$(M2PKGNAME)|",$($(1)RelDir))/"

LAYOUT := {
LAYOUT += "bin"=>"$(binRelDir)/",
LAYOUT += "lib"=>"$(libRelDir)/",
LAYOUT += "info"=>"$(infoRelDir)/",
LAYOUT += "data"=>"$(dataRelDir)/",
LAYOUT += "man"=>"$(manRelDir)/",
LAYOUT += "man1"=>"$(man1RelDir)/",
LAYOUT += "man3"=>"$(man3RelDir)/",
LAYOUT += "emacs"=>"$(emacsRelDir)/",
LAYOUT += "doc"=>"$(docRelDir)/",
LAYOUT += "docm2"=>"$(docm2RelDir)/",
LAYOUT += "packages" => "$(packagesRelDir)/",
LAYOUT += "docpackages"=>"$(docpackagesRelDir)/",
LAYOUT += "libm2"=>"$(libm2RelDir)/",
LAYOUT += "cache"=>"$(cacheRelDir)/",
LAYOUT += "datam2"=>"$(datam2RelDir)/",
LAYOUT += "share"=>"$(shareRelDir)/",
LAYOUT += "m2"=>"$(m2RelDir)/",
LAYOUT += "docm2rel"=>"$(docm2relRelDir)/",
LAYOUT += "emacsdoc"=>"$(emacsdocRelDir)/",
LAYOUT += "images"=>"$(imagesRelDir)/",
LAYOUT += "style"=>"$(styleRelDir)/",
LAYOUT += $(call MAKEFUN,packagesrc),
LAYOUT += $(call MAKEFUN,packagedoc),
LAYOUT += $(call MAKEFUN,packageimages),
LAYOUT += $(call MAKEFUN,packagetests),
LAYOUT += $(call MAKEFUN,packagehtml),
LAYOUT += $(call MAKEFUN,packagecache),
LAYOUT += $(call MAKEFUN,packageexamples)
LAYOUT += }

# end file system layout

RANLIB = @RANLIB@
AR = ar

MAKEFLAGS += -w

ifdef CYGWIN32
# CFLAGS += '-Dabort()=exit(1)'
# CXXFLAGS += '-Dabort()=exit(1)'
# this approach to fixing "abort" doesn't work because of a slight
# bug in configure/makeconf - strings here get evaluated by the
# shell a different number of times between now and
#   (1) the evaluation of the test compilations in factory/configure
#   (2) the evaluation of the compilations in factory/GNUmakefile
# and thus it is impossible to shield the parentheses from the shell.
# A fix is for all expressions in factory/configure like 
#	eval $ac_compile
# to be replaced by expressions like
#	eval `eval "echo $ac_compile"`
endif

ifeq "$(OS) $(ARCH)" "Linux alpha"
AS = gcc -c -x assembler-with-cpp
endif

ifeq "$(CC)" "cl"
include config.Microsoft
endif

DEBUGFLAGS :=

ifeq "$(MEMDEBUG)" "yes"
DEBUG = yes
endif

ifeq "$(DEBUG)" "yes"
STRIP = no
endif

ifeq "$(PROFILE)" "yes"
CFLAGS   += -pg
CXXFLAGS += -pg
LDFLAGS  += -pg
STRIP = no
endif

ifeq "$(DEBUG)" "yes"
DEBUGFLAGS += -DDEBUG
else
DEBUGFLAGS += -DNDEBUG
endif

ifeq "$(GCC)" "yes"
CFLAGS   += -pipe -Wall -Wshadow -Wcast-qual -Wno-parentheses -Wno-sign-compare -Wno-strict-aliasing
CXXFLAGS += -pipe -Wall -Wshadow -Wcast-qual -Wno-parentheses -Wno-sign-compare
ifeq "$(OPTIMIZE)" "yes"
CFLAGS   += -O3
CXXFLAGS += -O3
else
CFLAGS   += -O0
CXXFLAGS += -O0
endif
endif

ifeq "$(STRIP)" "no"
STRIPCMD := :
else
ifneq "$(CC)" "cl"
# -fomit-frame-pointer causes strange bugs!
# CFLAGS   += -fomit-frame-pointer
# CXXFLAGS += -fomit-frame-pointer
LDFLAGS  += -s
STRIPCMD := strip
endif
endif

ifeq "$(MEMDEBUG)" "yes"
DEBUGFLAGS += -DMEMDEBUG
endif

DUMPDATAFILE := Macaulay2-$(ARCH)-data

ifeq "$(DEBUG)" "yes"
CPPFLAGS += -DGC_DEBUG
endif

ifeq "$(OS)" "Darwin"

# we don't know what this does, but some apple documentation writers seem to like it:
LDFLAGS += -bind_at_load

# this one makes it find and use our readline.a first, even if there is a file readline.dylib in /usr/lib
# the point is that the system's readline.dylib might be much older and conflict with our newere one
LDFLAGS += -Wl,-search_paths_first

endif

ALTIVEC = @ALTIVEC@
ifeq "$(ALTIVEC)" "yes"
LDFLAGS += -faltivec
CFLAGS += -faltivec
CXXFLAGS += -faltivec
endif

XCODE = @XCODE@

# whether a profiling version of library libntl is available with -lntl-pg
HAVE_LIBNTL_PG = @HAVE_LIBNTL_PG@

# whether a profiling version of factory library libcf is available with -lcf-pg
HAVE_LIBCF_PG = @HAVE_LIBCF_PG@

# whether a profiling version of library libfac is available with -lfac-pg
HAVE_LIBFAC_PG = @HAVE_LIBFAC_PG@

# whether a profiling version of library libgc is available with -lgc-pg
HAVE_LIBGC_PG = @HAVE_LIBGC_PG@

# whether a profiling version of library libgmp is available with -lgmp-pg
HAVE_LIBGMP_PG = @HAVE_LIBGMP_PG@

# Local Variables:
# compile-command: "make -f Makefile-configuration"
# End:
