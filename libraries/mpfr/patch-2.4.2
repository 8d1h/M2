diff -ur --exclude=configure /Users/dan/src/M2/mike-branch/BUILD/dan/builds.tmp/mac64-icc.debug/libraries/mpfr/tmp/mpfr-2.4.2/mpfr-impl.h mpfr-2.4.2/mpfr-impl.h
--- /Users/dan/src/M2/mike-branch/BUILD/dan/builds.tmp/mac64-icc.debug/libraries/mpfr/tmp/mpfr-2.4.2/mpfr-impl.h	2009-11-29 21:43:08.000000000 -0500
+++ mpfr-2.4.2/mpfr-impl.h	2010-04-22 09:13:36.000000000 -0400
@@ -884,7 +884,7 @@
    only with gcc as this is undefined behavior, and we don't know what
    other compilers do (they may also be smarter). This trick could be
    disabled with future gcc versions. */
-#if defined(__GNUC__)
+#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
 # define INITIALIZED(VAR) VAR = VAR
 #else
 # define INITIALIZED(VAR) VAR
diff -ur --exclude=configure /Users/dan/src/M2/mike-branch/BUILD/dan/builds.tmp/mac64-icc.debug/libraries/mpfr/tmp/mpfr-2.4.2/round_raw_generic.c mpfr-2.4.2/round_raw_generic.c
--- /Users/dan/src/M2/mike-branch/BUILD/dan/builds.tmp/mac64-icc.debug/libraries/mpfr/tmp/mpfr-2.4.2/round_raw_generic.c	2009-11-29 21:43:09.000000000 -0500
+++ mpfr-2.4.2/round_raw_generic.c	2010-04-22 09:10:46.000000000 -0400
@@ -91,8 +91,9 @@
         nw++;
       MPFR_ASSERTD(nw >= 1);
       MPFR_ASSERTD(nw >= xsize);
-      if (use_inexp)
+#if use_inexp != 0
         *inexp = 0;
+#endif
 #if flag == 0
       MPN_COPY_DECR(yp + (nw - xsize), xp, xsize);
       MPN_ZERO(yp, nw - xsize);
@@ -138,8 +139,9 @@
               sb = xp[xsize - nw] & (himask ^ (himask << 1));
               if (sb == 0)
                 {
-                  if (use_inexp)
+#if use_inexp != 0
                     *inexp = 2*MPFR_EVEN_INEX*neg-MPFR_EVEN_INEX;
+#endif
                   /* ((neg!=0)^(sb!=0)) ? MPFR_EVEN_INEX  : -MPFR_EVEN_INEX;*/
                   /* Since neg = 0 or 1 and sb=0*/
 #if flag == 1
@@ -153,8 +155,9 @@
               else
                 {
                   /* sb != 0 && rnd_mode == GMP_RNDN */
-                  if (use_inexp)
+#if use_inexp != 0
                     *inexp = MPFR_EVEN_INEX-2*MPFR_EVEN_INEX*neg;
+#endif
                   /*((neg!=0)^(sb!=0))? MPFR_EVEN_INEX  : -MPFR_EVEN_INEX; */
                   /*Since neg= 0 or 1 and sb != 0 */
                   goto rnd_RNDN_add_one_ulp;
@@ -162,9 +165,10 @@
             }
           else /* sb != 0  && rnd_mode == GMP_RNDN*/
             {
-              if (use_inexp)
+#if use_inexp != 0
                 /* *inexp = (neg == 0) ? 1 : -1; but since neg = 0 or 1 */
                 *inexp = 1-2*neg;
+#endif
             rnd_RNDN_add_one_ulp:
 #if flag == 1
               return 1; /*sb != 0 && rnd_mode != GMP_RNDZ;*/
