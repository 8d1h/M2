# -*- Makefile -*-

LIBRARY_MODE = yes
include ../../include/config.Makefile

PREFIX = $(shell cd .. ; pwd)/final@FINALPREFIX@
LIBNAME = $(shell basename `pwd`)

TARDIR ?= $(LIBNAME)-$(VERSION)
TARFILE ?= $(LIBNAME)-$(VERSION).tar.gz

LIBRARIESDIR = $(PREFIX)/@librariesdirtail@
FINALLIBRARIESDIR = @FINALPREFIX@/@librariesdirtail@

CPPFLAGS := -I$(LIBRARIESDIR)/include $(CPPFLAGS)
LDFLAGS := -L$(LIBRARIESDIR)/lib $(LDFLAGS)

export PATH := @abs_top_srcdir@/autoconf/final/bin:$(PATH)

all install :: .installed-$(VERSION)
unconfigure : ; rm -f .configured-$(VERSION) .compiled-$(VERSION) .installed-$(VERSION)
reconfigure : unconfigure .configured-$(VERSION)
uninstall   : ; rm -f .installed-$(VERSION)
reinstall   : uninstall .installed-$(VERSION)
diffs : .untarred-$(VERSION) .untarred2-$(VERSION) ; diff -ur --exclude=configure tmp/$(TARDIR) $(TARDIR) |egrep -v '^Only in ' >$@ || echo diffs: `pwd`/$@
unmark : ; rm -f .configured-$(VERSION) .compiled-$(VERSION)
package-clean : unmark ; if [ -d $(BUILDDIR) ]; then $(MAKE) -C $(BUILDDIR) clean ; fi
package-distclean : unmark ; if [ -d $(BUILDDIR) ]; then $(MAKE) -C $(BUILDDIR) distclean ; fi

fetch : .fetched-$(VERSION)
patch : .patched-$(VERSION)
untar : .untarred-$(VERSION)
compile : .compiled-$(VERSION)
configure : .configured-$(VERSION)

PRECONFIGURE  ?= :

CONFIGOPTIONS += --build=@build@ --host=@host@ --cache-file=/dev/null
CONFIGENV     = env \
	CPPFLAGS="$(CPPFLAGS)" \
	CC="$(CC)" \
	CFLAGS="$(CFLAGS)" \
	CXX="@CXX@" \
	CXXFLAGS="$(CXXFLAGS)" \
	LDFLAGS="$(LDFLAGS)" \
	LOADLIBES="$(LOADLIBES)" \
	LDLIBS="$(LDLIBS)" \
	FFLAGS="$(FCFLAGS)" \
	FCFLAGS="$(FCFLAGS)"

CONFIGURECMD  ?= $(PRECONFIGURE) && $(CONFIGENV) ./configure --prefix=$(FINALLIBRARIESDIR) $(CONFIGOPTIONS)
BUILDTARGET   ?= 
BUILDCMD      ?= $(MAKE) $(BUILDOPTIONS) $(BUILDTARGET)
INSTALLTARGET ?= install
INSTALLCMD    ?= $(MAKE) $(INSTALLOPTIONS) prefix=$(LIBRARIESDIR) $(INSTALLTARGET)

BUILDDIR      ?= $(TARDIR)
.installed-$(VERSION)  : .compiled-$(VERSION)   ; @ set -x ; ( cd $(BUILDDIR) && $(INSTALLCMD)   ) && touch $@
.compiled-$(VERSION)   : .configured-$(VERSION) ; @ set -x ; ( cd $(BUILDDIR) && $(BUILDCMD)     ) && touch $@
.configured-$(VERSION) : .patched-$(VERSION)    ; @ set -x ; ( cd $(BUILDDIR) && $(CONFIGURECMD) ) && touch $@

ifneq ($(PATCHFILE),)
.patched-$(VERSION) : $(PATCHFILE) .untarred-$(VERSION) ; patch -p0 <$< && touch $@
else
.patched-$(VERSION) : .untarred-$(VERSION) ; touch $@
endif

UNTARCMD ?= tar xzf tarfiles/$(TARFILE)
.untarred-$(VERSION) : .fetched-$(VERSION) ; $(UNTARCMD) && touch $@
.untarred2-$(VERSION) : .fetched-$(VERSION) ; mkdir tmp ; $(UNTARCMD) -C tmp && touch $@

ifeq ($(FETCHER),)
ifneq (@WGET@,)
FETCHER = @WGET@
else
ifneq (@CURL@,)
FETCHER = @CURL@
else
$(error either curl or wget is needed for downloading library source code, please install one of them and reconfigure)
endif
endif
endif

ifeq ($(FETCHER),curl)
FETCHOPTS = -o "$(TARFILE)"
else
ifneq ($(FETCHER),wget)
FETCHOPTS = 
endif
endif

CHECKFETCHED = case "$(URL)" in \
	http:*) \
	    if file tarfiles/$(TARFILE) | grep HTML ; \
	    then echo tried to fetch file, but HTML file returned instead >&2 ; exit 1 ; \
	    fi ;; \
	esac

.fetched-$(VERSION) :
	$(MKDIR_P) tarfiles
	(cd tarfiles && $(FETCHER) $(URL)/$(TARFILE) $(FETCHOPTS) && $(CHECKFETCHED)) && touch $@

distclean :: package-distclean

clean ::; rm -rf .patched* .untarred* $(LIBNAME)* .compiled* .configured* .installed* .untarred2* diffs tmp $(TARDIR)
distclean :: clean ; rm -rf Makefile tarfiles/* .fetched*
check ::

ls :; ls -la . tarfiles

help :;
	@ echo ""
	@ echo "usage: make [option...] [target...]"
	@ echo ""
	@ echo "targets:"
	@ echo ""
	@ echo "  all                         build/compile all files [the default target]"
	@ echo "  reconfigure		      remake configuration files for library"
	@ echo "  diffs			      create diff file for changes to library sources"
	@ echo "  clean			      remove most created files, except Makefiles and dowloaded tarfiles"
	@ echo "  distclean		      remove all created files"
	@ echo "  package-clean		      remove most created files in the package's directory tree, except Makefiles"
	@ echo "  package-distclean	      remove all created files in the package's directory tree"
	@ echo "  check			      check whether library compiled correctly"
	@ echo ""

# Local Variables:
# compile-command: "make -C $M2BUILDDIR/libraries Makefile.library"
# End:
