# warning: if you move the directory tree, then factory needs to be reconfigured

include Makeconf

FILES := Makefile Makeconf README patches

SUBDIRS := gc gmp factory libfac Macaulay2

.PHONY : all always dirs clean port

all: GC GMP FACTORY LIBFAC MP MACAULAY2

lib:; mkdir lib
include:; mkdir include

always:

clean:; for i in $(SUBDIRS); do $(MAKE) -C $$i $@; done

bigport: Macaulay2-$(VERSION)-src-bigport.tar
Macaulay2-$(VERSION)-src-bigport.tar: src-dev \
		Macaulay2/tgz/Macaulay2-${VERSION}-src-dev.tgz
	tar cf $@ $(FILES) \
		tgz/gc$(GCVERSION).tar.gz \
		tgz/gmp-$(GMPVERSION).tar.gz \
		tgz/factory-$(FACTORYVERSION).tar.gz \
		tgz/libfac-$(LIBFACVERSION).tgz \
		tgz/MP-$(MPVERSION).tar.gz \
		-C Macaulay2 tgz/Macaulay2-$(VERSION)-src-dev.tgz

medport: Macaulay2-$(VERSION)-src-medport.tar
Macaulay2-$(VERSION)-src-medport.tar: src-dev \
		Macaulay2/tgz/Macaulay2-${VERSION}-src-dev.tgz
	tar cf $@ $(FILES) \
		-C Macaulay2 tgz/Macaulay2-$(VERSION)-src-dev.tgz

src-dev :
	make -C Macaulay2 devdist

port: Macaulay2-$(VERSION)-src-port.tar
Macaulay2-$(VERSION)-src-port.tar: \
		Macaulay2/tgz/Macaulay2-${VERSION}-src-limited.tgz
	tar cf $@ $(FILES) \
		tgz/gc$(GCVERSION).tar.gz \
		tgz/gmp-$(GMPVERSION).tar.gz \
		tgz/factory-$(FACTORYVERSION).tar.gz \
		tgz/libfac-$(LIBFACVERSION).tgz \
		tgz/MP-$(MPVERSION).tar.gz \
		-C Macaulay2 tgz/Macaulay2-$(VERSION)-src-limited.tgz
portfloppy:
	tar cfM /dev/floppy $(FILES) \
		tgz/gc$(GCVERSION).tar.gz \
		tgz/gmp-$(GMPVERSION).tar.gz \
		tgz/factory-$(FACTORYVERSION).tar.gz \
		tgz/libfac-$(LIBFACVERSION).tgz \
		tgz/MP-$(MPVERSION).tar.gz \
		-C Macaulay2 tgz/Macaulay2-$(VERSION)-src-dev.tgz

################################ GC
GC: gc lib/libgc.a include/gc.h include/gc_cpp.h
# GC_CFLAGS = -DNO_SIGNALS -g -O -DALL_INTERIOR_POINTERS -DGC_DEBUG
GC_CFLAGS = -DNO_SIGNALS -g -O -DNO_DEBUGGING -DSILENT -DALL_INTERIOR_POINTERS
lib/libgc.a: 	  gc/gc.a lib;	 	cp $< $@; ranlib $@
include/gc.h:	  gc/gc.h include;	cp $< $@
include/gc_cpp.h: gc/gc_cpp.h include;	cp $< $@
gc/gc.a: 	  always
	$(MAKE) -C gc CC=gcc AS=$(AS) CFLAGS='$(GC_CFLAGS)' gc.a
	$(MAKE) -C gc CXX=gcc CFLAGS='$(GC_CFLAGS)' -nostdinc++ c++

#	echo '#undef DYNAMIC_LOADING' >> gc/config.h
#	echo 'int one_more_symbol;' >> gc/checksums.c

###################### GMP
GMP : 	gmp include/gmp.h \
	lib/libmpn.a lib/libmpz.a lib/libmpq.a lib/libmpf.a lib/libgmp.a
include/gmp.h: gmp/gmp.h include; cp $< $@
lib/libmpn.a: gmp/mpn/libmpn.a lib; cp $< $@; ranlib $@
lib/libmpz.a: gmp/mpz/libmpz.a lib; cp $< $@; ranlib $@
lib/libmpq.a: gmp/mpq/libmpq.a lib; cp $< $@; ranlib $@
lib/libmpf.a: gmp/mpf/libmpf.a lib; cp $< $@; ranlib $@
lib/libgmp.a: gmp/libgmp.a lib; cp $< $@; ranlib $@

gmp/mpn/libmpn.a : make-gmp
gmp/mpz/libmpz.a : make-gmp
gmp/mpq/libmpq.a : make-gmp
gmp/mpf/libmpf.a : make-gmp
gmp/libgmp.a : make-gmp

make-gmp : gmp/config.status
	$(MAKE) -C gmp
gmp/config.status: gmp/configure
	cd gmp; ./configure >/dev/null

###################### FACTORY

# when importing a new version of factory, make sure the directory is clean,
# (look to see if factory/config.status is there)

FACTORY: factory factory/config.status \
		makeFACTORY \
		lib/factory/$(FACTORYVERSION)/libcf-optimize.a \
		include/templates \
		include/templates/factor.h \
		include/templates/functions.h \
		include/templates/list.h \
		include/templates/matrix.h
include/templates: include ; mkdir $@
include/templates/factor.h: factory/templates/factor.h; cp $< $@
include/templates/functions.h: factory/templates/functions.h; cp $< $@
include/templates/list.h: factory/templates/list.h; cp $< $@
include/templates/matrix.h: factory/templates/matrix.h; cp $< $@
makeFACTORY:; $(MAKE) -C factory
factory/libcf-optimize.a: factory
	$(MAKE) -C factory

ifeq ($(OS),MS-DOS)
lib/factory/$(FACTORYVERSION)/libcf-optimize.a: lib
	- mkdir lib/factory
	- mkdir lib/factory/$(FACTORYVERSION)
	- mkdir lib/factory/$(FACTORYVERSION)/templates
	cp factory-$(FACTORYVERSION)/libcf-optimize.a lib/factory/$(FACTORYVERSION)
	cp factory-$(FACTORYVERSION)/factory.h lib/factory/$(FACTORYVERSION)
	cp factory-$(FACTORYVERSION)/tmpl_inst.cc lib/factory/$(FACTORYVERSION)/templates
	cp templates/array.h \
			templates/factor.h \
			templates/list.h \
			templates/matrix.h \
			templates/array.cc \
			templates/factor.cc \
			templates/list.cc \
			templates/matrix.cc \
			templates/functions.h \
		lib/factory/$(FACTORYVERSION)/templates
else
lib/factory/$(FACTORYVERSION)/libcf-optimize.a: lib factory/libcf-optimize.a
	$(MAKE) -C factory install
	ranlib lib/libcfmem.a
endif

factory/config.status :
	cd factory;\
	GMP_INCLUDE_PATH=../include;\
	export GMP_INCLUDE_PATH;\
	./configure \
		--prefix=.. \
		--with-memman \
		--with-optimize

###################### LIBFAC
LIBFAC:		libfac \
		libfac/config.status libfac/libfac.a include/factor.h lib/libfac.a
libfac/config.status :
	cd libfac; ./configure --includedir=../include
libfac/libfac.a : always
	$(MAKE) CXX=g++ OPTCXX=g++ -C libfac libfac
include/factor.h: libfac/factor.h include; cp $< $@
lib/libfac.a: libfac/libfac.a lib; cp $< $@; ranlib $@

###################### MP
MP:	mp mp/config.status mp/libMP.a \
	lib/libMP.a include/MP.h include/MP_Config.h
mp/config.status:
	cd mp; ./configure --prefix=$(TOPDIR) # --with-debug
mp/libMP.a:
	$(MAKE) -C mp libMP.a
lib/libMP.a: mp/MP/libMP.a lib; cp $< $@; ranlib $@
include/MP.h: mp/MP/MP.h include; cp $< $@
include/MP_Config.h: mp/MP/MP_Config.h include; cp $< $@

###################### Macaulay 2
MACAULAY2: Macaulay2
	$(MAKE) -C Macaulay2 all install tests dist
MACAULAY2.all: Macaulay2
	$(MAKE) -C Macaulay2 all
Macaulay2/tgz/Macaulay2-${VERSION}-src-limited.tgz:
	$(MAKE) -C Macaulay2 srcdist
Macaulay2/tgz/Macaulay2-${VERSION}-src-dev.tgz:
	$(MAKE) -C Macaulay2 devdist

