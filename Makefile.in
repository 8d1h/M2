# @configure_input@
# Targets to use:
ifdef XYZZY
  If you get an error message on this line, it is because you are not using
  the 'gnu' version of the 'make' program.  The source code for it is
  available at ftp://ftp.gnu.org/pub/gnu/make.
endif
include include/config.Makefile
VPATH = @srcdir@

.PRECIOUS test-configuration install install-strip all clean distclean:: @srcdir@/configure config.status

Makefile : Makefile.in; ./config.status Makefile

include/config.Makefile: include/config.Makefile.in; ./config.status include/config.Makefile
all :: include/config.Makefile

include/config.h: include/config.h.in; ./config.status include/config.h
all :: include/config.h

@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files
	$(MAKE) -C @srcdir@ -f Makefile-configuration
	@echo '-----------------------------------------------------------------------------'
	@echo '# $@ has just been remade'
	@echo '#  exiting so you can run it again the same way you did before'
	@echo '#  here is the way you ran it before:'
	@echo '#'
	@echo '#     $(CONFIG_CMD)'
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1
status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  here is the way you ran $^ before:'
	@echo '#'
	@echo '#     $(CONFIG_CMD)'
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
config.status : @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '# error: $@ not there or older than $^'
	@echo '#  exiting so you can run $^ the same way you did before'
	@echo '#  here is the way you ran it before:'
	@echo '#'
	@echo '#     $(CONFIG_CMD)'
	@echo '#'
	@echo '#  type "make reconfigure" to run it that way again'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
	@exit 1
reconfigure: @srcdir@/configure
	./config.status --recheck
	./config.status
configure-help:
	@ @srcdir@/configure --help

# announcement only:
install all clean distclean install-strip ::
	@echo '-------- making '$@', $(PACKAGE_VERSION) for ARCH=$(ARCH) OS=$(OS) REL=$(REL) --------'

# first install target, the only place in the tree where 'all' is a prerequisite of 'install', hopefully.
install install-strip :: all

install install-strip :: ; rm -f INSTALLDIR && ln -s $(prefix) INSTALLDIR
clean   :: ; rm -f INSTALLDIR
distclean::; rm -f config.cache config.log config.status configure.options
distclean:: clean
ifeq "$(CC)" "cl"
all:: ;	$(MAKE) -C WindowsNT
endif
all distclean check clean install install-strip :: ; $(MAKE) -C Macaulay2 $@
all::; $(MAKE) -C Macaulay2 doc
DIRS := $(target) $(bindir) $(libm2dir) $(man1dir) $(emacsdir) $(m2dir) $(docm2reldir)
install :: $(DIRS)
$(DIRS) :; $(INSTALL) -d $@
distclean ::; rm -f @CONFIGURED_FILES@ include/config.h include/config.Makefile
install install-strip all clean distclean::; @echo "-------- done making '$@' --------"
install install-strip all::
	@echo "************************************************"
	@echo "*                                              *"
	@echo "*    don't forget to run 'make check'          *"
	@echo "*                                              *"
	@echo "************************************************"
help :
	@ echo "usage: make [option...] [target...]"
	@ echo ""
	@ echo "targets:"
	@ echo "  all                         build/compile all files [the default target]"
	@ echo "  install                     generate the documentation, install all files"
	@ echo "  check                       run the tests"
	@ echo "  clean                       remove all generated files except makefiles"
	@ echo "  distclean                   remove all generated files"
	@ echo "  help                        show this help"
	@ echo "  status                      show options used with 'configure'"
	@ echo "  configure-help              show help for 'configure'"
	@ echo "  reconfigure                 re-run configure with same options"
	@ echo ""
	@ echo "options:"
	@ echo "      IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "      RemakeAllDocumentation=true    remake all documentation"
	@ echo "      RerunExamples=true             rerun example output files"
	@ echo "      debugLevel=1                   turn on further M2 debugging output"
	@ echo "      MAPFILE=yes                    create a mapfile when linking M2"
	@ echo ""
	@ echo "./config.status options:"
	@ echo ""
	@ echo "      --recheck                       re-run configure with same options"
	@ echo ""

# Local Variables:
# compile-command: "make -C $M2BUILDDIR"
# End:
