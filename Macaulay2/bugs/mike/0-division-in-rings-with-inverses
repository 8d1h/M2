This bug is now FIXED: 2/7/09

I guess this got fixed by another bug fix....

R = QQ[x,y, Inverses => true, MonomialOrder => Lex]
quotientRemainder(x^100 - x^89, x^5 - 1)
quotientRemainder(x^100 - y^89, x^5 - 1)

In this example there is no weight vector, so our new algorithm in rawDivMod
shouldn't fire at all, but it seems to do one subtraction step, anyway.  Is
that right?  Should I document it?  (Dan)


i4 :      R = QQ[x,y, Inverses => true, MonomialOrder => Lex]

o4 = R

o4 : PolynomialRing

i5 :      quotientRemainder(x^100 - x^89, x^5 - 1)

       95   95    89
o5 = (x  , x   - x  )

o5 : Sequence

i6 :      quotientRemainder(x^100 - y^89, x^5 - 1)

       95   95    89
o6 = (x  , x   - y  )

o6 : Sequence

=============================================================================

In my chapter on complete intersections we have an example like this:

    i184 : QQ[t,Inverses=>true,MonomialOrder=>RevLex]

    o184 = QQ[t]

    o184 : PolynomialRing

    i185 : describe oo

    o185 = QQ[t, Degrees => {1}, MonomialOrder => {MonomialSize => 32}, DegreeRank => 1, Inverses => true]
						  {GroupRevLex => 1  }
						  {Position => Up    }

    i186 : (1+t^10)%(1+t)

		  10
    o186 = - t + t

    o186 : T'

Here again the division just goes through one subtraction step.  Is this a case
where there is no weight vector found, so none is used?  But, can't we take
GroupRevLex => 1 as an inferred weight vector of {-1,0,...,0}, and similarly
with GroupLex => 1?

I would like the division to proceed much further in this case.

(Dan)
