R = QQ[x,y, Degrees => {{1,0},{0,1}}]
S = degreesRing R
describe S
T_0
1 % (1 - T_0)


-- test of division in different settings
(1-T_0^4) % (T_0 + T_1 + T_0^2)
(1-T_0^4) // (T_0^-3*T_1)
(1-T_0^4) % (T_0^-3*T_1) == 0

end
This is important to get fixed, because it applies to reducing Hilbert series to lowest terms.

    i5 : QQ[x,y, Degrees => {{1,0},{0,1}}]

    o5 = QQ[x, y]

    o5 : PolynomialRing

    i6 : use degreesRing oo

    o6 = ZZ[T , T ]
	     0   1

    o6 : PolynomialRing

    i7 : describe oo

    o7 = ZZ[T , T , Degrees => {2:1}, MonomialOrder => {MonomialSize => 32}, DegreeRank => 1, Inverses => true, Global => false]
	     0   1                                     {Weights => {2:-1} }
						       {GroupRevLex => 2  }
						       {Position => Up    }
    i8 : 1 % (1 - T_0)

     *** out of memory, exiting ***

Proposed algorithm, which will work when dividing by 1 plus terms of negative
weight, when working in a ring with inverses, so it's only Z-graded and not
N-graded:

Define the length of a ring element to be the weight of the first term minus
the weight of the last term, using the *first* weight vector in the monomial
ordering, so that the weight of the first term is at least as large as the
weight of the last term, and thus the length is greater than or equal to 0.

When dividing, keep dividing until you get a remainder whose "length" is
strictly less than the length of the divisor.  (Because there are inverses for
all the variables, you can always clobber the lead term of the dividend by
subtracting a suitable multiple of the divisor.)

This will be good enough, because in our degrees rings, the denominator of a
Hilbert series will be a product of terms 1-T, where T is a monomial of
strictly negative weight.  That's because the weight vector is minus the heft
vector of the original ring, and T is the monomial constructed from the degree
vector of one of the variables in the original ring.  Note that any divisor of
such a product will be 1 plus terms of negative weight.  Also, notice that
length is additive, because degrees rings are integral domains; this is the
appropriate analogue of additivity of degrees.  Thus if all we're interested in
is testing divisibility and getting the right quotient when the remainder is
zero,this algorithm will work.



