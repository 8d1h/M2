globalAssignment is not implemented for all types, e.g., for HashTable:

i14 : code(net,MutableHashTable)

o14 = -- code for method: net(MutableHashTable)
      ../../../m2/nets.m2:197:27-203:70: --source code:
      net MutableHashTable := x -> (
           if hasAnAttribute x then (
                if hasAttribute(x,PrintNet) then return getAttribute(x,PrintNet);
                if hasAttribute(x,PrintNames) then return net getAttribute(x,PrintNames);
                if hasAttribute(x,ReverseDictionary) then return toString getAttribute(x,ReverseDictionary);
                );
           horizontalJoin ( net class x, if #x > 0 then ("{...", toString(#x), "...}") else "{}" ))

i15 : code(net,HashTable)

o15 = -- code for method: net(HashTable)
      ../../../m2/nets.m2:187:20-192:83: --source code:
      net HashTable := x -> (
           horizontalJoin flatten ( 
                net class x,
                "{", 
                -- the first line prints the parts vertically, second: horizontally
                stack (horizontalJoin \ sort apply(pairs x,(k,v) -> (net k, " => ", net v))),

i17 : help globalAssignment

o17 = globalAssignment -- install standard global assignment method
      *************************************************************

      Synopsis
      ========

        * Usage: globalAssignment X
        * Inputs:
            * X, a type
        * Consequences:
            * the functions "globalAssignFunction" and "globalReleaseFunction" are installed in the type X under "GlobalAssignHook" and "GlobalReleaseHook",
              respectively.  The effect is that when an object of type X is assigned to a global variable, the function "use" is called on it, and
              thereafter that object will print out as the name of the variable.

      Description
      ===========

      One type for which this has been done is "Ring", as illustrated in the following example.

      +-----------------------+
      |i1 : S := QQ[x]        |
      |                       |
      |o1 = QQ[x]             |
      |                       |
      |o1 : PolynomialRing    |
      +-----------------------+
      |i2 : S                 |
      |                       |
      |o2 = QQ[x]             |
      |                       |
      |o2 : PolynomialRing    |
      +-----------------------+
      |i3 : S^3               |
      |                       |
      |            3          |
      |o3 = (QQ[x])           |
      |                       |
      |o3 : QQ[x]-module, free|
      +-----------------------+
      |i4 : R = S             |
      |                       |
      |o4 = R                 |
      |                       |
      |o4 : PolynomialRing    |
      +-----------------------+
      |i5 : S                 |
      |                       |
      |o5 = R                 |
      |                       |
      |o5 : PolynomialRing    |
      +-----------------------+
      |i6 : S^3               |
      |                       |
      |      3                |
      |o6 = R                 |
      |                       |
      |o6 : R-module, free    |
      +-----------------------+

o17 : DIV
