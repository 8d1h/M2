Date: Fri, 30 Jun 2006 17:10:23 -0500 (CDT)
From: Dan Grayson <dan@math.uiuc.edu>
To: mike@math.cornell.edu
CC: dan@math.uiuc.edu
Subject: Tally == Tally
Reply-to: dan@math.uiuc.edu


I didn't think carefully about it when installing the method for Tally == Tally
at your request a few days ago.  I think two tallies should be weakly equal
only if their elements and multiplicities are weakly equal.  For example, we
want

       set { ideal (x,y), ideal (x,y,z) } == set { ideal (y,x), ideal(y,z,x) }

to be true.

Maybe I'll implement that.  It'll be way slow, so maybe I won't.

Meanwhile, I'm removing the method and rerunning all the examples.

What do you think?

-----------------------------------------------------------------------------n

Date: Fri, 30 Jun 2006 17:43:15 -0500 (CDT)
From: Dan Grayson <dan@math.uiuc.edu>
To: mike@math.cornell.edu
CC: dan@math.uiuc.edu
In-reply-to: <200606302210.k5UMANf29331@u00.math.uiuc.edu> (message from Dan
	Grayson on Fri, 30 Jun 2006 17:10:23 -0500 (CDT))
Subject: Re: Tally == Tally
Reply-to: dan@math.uiuc.edu


In connection with designing a weak equality algorithm for sets and tallies it
would be very nice to have a few functions f,g,h,..., each of which would
accept an ideal and return some sort of thing such that I == J implies f I ===
f J.  Then we could convert a set of ideals I to a set of tuples (f I, g I, h
I, ...), compute the elements lazily somehow, and have a preliminary step that
makes it likely that the answer that the sets are weakly unequal will be
quickly attained.  For example, the functions could be "ring", "poincare",
"gens @@ gb".  Indeed, with gb on the list, the functions give a complete set
of invariants.

Call this tuple of functions a sequence of discriminators.  Then every class
should have a tuple of discriminators installed, if possible, together with an
indication of whether it's a complete set.
