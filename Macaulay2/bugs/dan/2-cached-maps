Date: Wed, 12 Jul 2006 15:32:00 -0500 (CDT)
From: Dan Grayson <dan@math.uiuc.edu>
To: Michael Stillman <mike@math.cornell.edu>
CC: dan@math.uiuc.edu
In-reply-to: <2F630D10-386F-471E-8DF6-7AAC6AE245E4@math.cornell.edu> (message
	from Michael Stillman on Wed, 12 Jul 2006 16:15:41 -0400)
Subject: Re: 
Reply-to: dan@math.uiuc.edu


Good.

For fields, though, the basis will be changed, as I am pruning.  That is the
only way to give a resolution of length 0.

And I should always give a map from C or from C_0 to M, when C = res M, because
it's not always the case that coker C.dd_1 and M will be equal.  The reason is
that images and subquotients are replaced by cokernels of presentations, first
thing.

I wonder if there is a uniform way for trim, prune, and res, to give such maps
and their inverses, so we don't have clumsy keys like minimalPresentationMap,
but still allowing getting the map to be an afterthought...

Maybe something like this?

	N = trim M
	...
	cachedMap(trim,N,M)
	cachedMap(trim,M,N)

For this, if we ever have N === M, so that cachedMap can't distinguish whether
we want the map or its inverse, then we'd have to ensure that the map is the
identity, but that's pretty automatic already.

For res, the map would go in one direction only (until we implement the derived
category).

	 C = res M
	 cachedMap(res,M,C_0)

Let's see: C_0 is usually just "cover M", so it's old, so I'd have find a way
of storing the map in C, not in C_0...

> From: Michael Stillman <mike@math.cornell.edu>
> Subject: Re: 
> Date: Wed, 12 Jul 2006 16:15:41 -0400
> To: dan@math.uiuc.edu
> 
> I'm working on this for Strategy=>1.
> 
> It should be possible to make the basis of C_0 correct.
> 
> On Jul 12, 2006, at 2:16 PM, Dan Grayson wrote:
> 
> >
> > Let's attend to res changing the basis on C_0 this afternoon.
> 

