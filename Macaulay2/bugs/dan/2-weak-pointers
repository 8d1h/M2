gc seems to offer support now for weak pointers.  In any case, we could use
them for:

     1) a list of open files, databases, and mysql connections that should be
        closed upon exit unless they got closed by finalization (by the
        collector)

     2) a hash table of rings.  The key is the specification for creating the ring;
        the value is the ring.  Both pointers to keys and to values are weak
        pointers.  Finalization of the ring removes the entry from the hash
        table.  (Sage returns the same ring every time!)

     3) any cached computational results where the reason for caching is preservation
        of identity rather than saving time.  Preservation of identity is important
	for a functor F, for example, because if f and g are composable maps, Ff and Fg
	will be composable only if source Ff === target Fg.

     4) making R^1 always give the same answer.

We can implement them ourselves with masking and finalization.
