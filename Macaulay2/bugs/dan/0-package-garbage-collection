--*-M2-*-

reloading a package can lead to a memory leak:

    set a memory limit for this test:

    ulimit -v 500000					    -- but this doesn't work on Mac OS X
    M2

    while true do value ///
       newPackage ("foo",Reload=>true)
       XX = new Type of BasicList
       globalAssignment XX
       xx = new XX from {Bag {10000000 : 0}} -- about 40 MB
       << "." << flush;
       ///

    debug Core
    peek Attributes						    -- shows them stashed there

another memory leak associate with reloading a package:

     all global variables are stored in the single global frame:
     
	    i1 : debug Core

	    i2 : examine asdf777
	    symbol closure :
	     symbol : asdf777
	     position : stdio:2:9:(3):
	     frameID : 0     	       	    	      <=====
	     frameindex : 2210 	       	    	      <=====
	     lookupCount : 1
	     protected : false
	     thread : false
	     frames bound : 0 @4311789024 (NR) [2211 of 4095]

	    i3 : dictionary asdf777

	    o3 = User#"private dictionary"

	    o3 : GlobalDictionary

	    i4 : newPackage "Foo"

	    o4 = Foo

	    o4 : Package

	    i5 : debug Core

	    i6 : examine asd46464
	    symbol closure :
	     symbol : asd46464
	     position : stdio:6:9:(2):
	     frameID : 0     	       	    	      <=====
	     frameindex : 2214 	       	    	      <=====
	     lookupCount : 1
	     protected : false
	     thread : false
	     frames bound : 0 @4311789024 (NR) [2215 of 4095]

	    i7 : dictionary asd46464

	    o7 = Foo#"private dictionary"

	    o7 : GlobalDictionary
