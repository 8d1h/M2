#! /bin/sh
stdlib=-J--LIBDIR--
LOADLIBES=-lm
CC=gcc
CXX=g++
CFLAGS="-ansi"
CCFLAGS=
# CCFLAGS gets passed when the source is *.c
# CFLAGS gets passed when the source is *.c or *.d
LDFLAGS=
badarg=0
compile=1
dep=0
link=1
verbose=0
keep=0
cfiles=
ccfiles=
copt=
sccflags=
dfiles=
dcfiles=
decls=
scclib="--LIBDIR--/scclib.o"
inits=
obj=
linkout=
lib=
################ process args
while [ $# != 0 ]
do case $1 in
    -d)     echo --LIBDIR--; exit 0;;
    +gc)    if [ scclib != "" ]; then scclib="--LIBDIR--/scclib.o"; fi
	    sccflags="$sccflags $1" ;;
    -noarraychks|-nogcc|-noansi|-memstats|+countstats|\
    -yydebug|-debug|-nosetup)
	    sccflags="$sccflags $1" ;;
    -sig)   compile=0; sccflags="$sccflags $1" ;;
    -dep)   dep=1; compile=0; sccflags="$sccflags $1" ;;
    -tabwidth) shift; sccflags="$sccflags -tabwidth $1" ;;
    -static) LDFLAGS="$LDFLAGS -static";;
    -g)     CFLAGS="$CFLAGS $1"; LDFLAGS="$LDFLAGS $1" ;;
    -W*)    CCFLAGS="$CCFLAGS $1" ;;
    -I*|-ansi|-D*) CFLAGS="$CFLAGS $1" ;;
    -r|-s)  LDFLAGS="$LDFLAGS $1" ;;
    -O)     copt=-O2; sccflags="$sccflags $1" ;;
    -J)     stdlib= scclib= ;;
    -J*)    sccflags="$sccflags $1" ;;
    -v)     verbose=1 ;;
    -L*|-l*) LOADLIBES="$LOADLIBES $1" ;;
    -E)     link=0; CCFLAGS="$CCFLAGS $1" ;;
    -d)     compile=0 ;;
    -k)     keep=1 ;;
    -c)     link=0 ;;
    -o)     shift; linkout="-o $1" ;;
    -*)     echo unknown option "$1" >&2 ; badarg=1 ; exit 1 ;;
    *) case `basename $1` in
	*.o) obj="$obj $1" ;;
	*.a) lib="$lib $1" ;;
	C.d) base=`basename $1 .d`
	     dfiles="$dfiles $base"
	     dcfiles="$dcfiles $base"
	     obj="$obj $base.oo"
	     inits="$inits  _prepare();
"
	     decls="$decls""void _prepare();
"
	     ;;
	C.oo) obj="$obj $1"
	     inits="$inits  _prepare();
"
	     decls="$decls""void _prepare();
"
	     ;;
	*.d) base=`basename $1 .d`
	     dfiles="$dfiles $base"
	     dcfiles="$dcfiles $base"
	     obj="$obj $base.oo"
	     inits="$inits  $base""__prepare();
"
	     decls="$decls""void $base""__prepare();
"
	     ;;
	*.oo) base=`basename $1 .oo`
	     obj="$obj $1"
	     inits="$inits  $base""__prepare();
"
	     decls="$decls""void $base""__prepare();
"
	     ;;
	*.c) base=`basename $1 .c`
	     cfiles="$cfiles $base"
	     obj="$obj $base.o"
	     ;;
	*.cc) base=`basename $1 .c`
	     ccfiles="$ccfiles $base"
	     obj="$obj $base.o"
	     ;;
	*.*) echo unknown file type "$1" >&2 ; badarg=1 ;;
	*)   echo mysterious argument "$1" >&2 ; badarg=1 ;;
	esac
    esac
    shift
done
if [ $badarg != 0 ]; then exit 1; fi
################ translate *.d files to *.c
set x $dfiles
shift
while [ $# != 0 ]
do	cmd="--SCC1-- $sccflags $stdlib $1.d"
	if [ $verbose = 1 ]; then echo "  $cmd" ; fi
	if eval $cmd
	then	:
	else	rm -f $1.dep
		exit 1
	fi
	if [ ! -f $1.sig ]
	then	cmd="mv $1.sgn $1.sig"
		if [ $verbose = 1 ]; then echo "  $cmd" ; fi
		eval $cmd || exit $?
	elif	cmp -s $1.sig $1.sgn
	then	cmd="rm $1.sgn"
		if [ $verbose = 1 ]; then echo "  $cmd" ; fi
		eval $cmd || exit $?
	else	echo "$1.sig is out of date, updating.  (Restart make.)" >&2
		cmd="mv $1.sgn $1.sig"
		if [ $verbose = 1 ]; then echo "  $cmd" ; fi
		eval $cmd || exit $?
		touch .restart
		exit 1
	fi
	shift
done
################
if [ $compile = 0 ]; then exit 0; fi
################ compile *.c files arising from *.d files
set x $dcfiles
shift
while [ $# != 0 ]; 
do	cmd="$CC $CFLAGS $copt -c $1.c -o $1.oo"
	if [ $verbose = 1 ]; then echo "  $cmd" ; fi
 	eval $cmd || exit $?
	if [ $keep = 0 ]; then rm $1.c; fi
	shift
done
################ compile *.c files provided by user
set x $cfiles
shift
while [ $# != 0 ]; 
do	cmd="$CC $CFLAGS $CCFLAGS -c $1.c"
	if [ $verbose = 1 ]; then echo "  $cmd" ; fi
	eval $cmd || exit $?
	shift
done
################ compile *.cc files provided by user
set x $ccfiles
shift
while [ $# != 0 ]; 
do	cmd="$CXX $CFLAGS $CCFLAGS -c $1.cc -o $1.o"
	if [ $verbose = 1 ]; then echo "  $cmd" ; fi
	eval $cmd || exit $?
	shift
done
################
if [ $link = 0 ]; then exit 0; fi
################ link step
cat >tmp_inits.c <<EOF
char *timestamp = "`date`";
$decls
int main_inits(){
$inits
return 0;
}
EOF
cmd="$CC $CFLAGS -c tmp_inits.c"
if [ $verbose = 1 ]; then echo "  $cmd" ; fi
eval $cmd || exit $?
cmd="$CXX $CFLAGS $LDFLAGS tmp_inits.o $obj $linkout $scclib $lib $LOADLIBES"
if [ $verbose = 1 ]; then echo "  $cmd" ; fi
eval $cmd || exit $?
exit 0
