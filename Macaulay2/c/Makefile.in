# @configure_input@
############################## main target
all:: scc1
include ../../include/config.Makefile
top_srcdir = @top_srcdir@
VPATH = @srcdir@
############################################
%.c        : %.y
	@YACC@ $(YFLAGS) $^
	mv y.tab.c $*.c
	rm -f y.tab.h y.output
############################################################
.PHONY : clean all install tags
YFLAGS := -vdlt
LOADLIBES += -lgc -lm
CNAMES := scc1.c readfile.c error.c dictionary.c list.c cprint.c type.c chk.c compat.c
HFILES := $(CNAMES:.c=.h) scc.h grammar.h
OFILES := $(CNAMES:.c=.o) grammar.o
SRCFILES := $(HFILES) $(CNAMES) grammar.y
CPPFLAGS += -I../../include -I/include -I@srcdir@/../../include
CPPFLAGS += -I@srcdir@
LDFLAGS += -L../../libraries/final@FINALPREFIX@/$(librariesRelDir)/lib
ifeq (@OS@,Linux)
LDFLAGS += -Wl,-rpath,$(shell /bin/pwd)/../../libraries/final@FINALPREFIX@/$(librariesRelDir)/lib
endif
############################## compiling
scc1 : $(OFILES)
	$(LINK.o) $^ -lgc @LOADLIBES@ $(LDLIBS) $(OUTPUT_OPTION)
$(OFILES) : $(HFILES)
grammar.o : grammar.c; @CC@ $(CPPFLAGS) $(CFLAGS) -c $< $(OUTPUT_OPTION)
############################## tags
ifneq (@ETAGS@,)
all :: tags
endif
tags : @srcdir@/TAGS
@srcdir@/TAGS: $(SRCFILES); cd @srcdir@ && @ETAGS@ $(SRCFILES)
############################## cleaning
clean :
	rm -f *.o scc1 scc.a grammar.output grammar.tab.h \
		scc.install TAGS scc core y.tab.h y.output grammar.c
distclean : clean
	rm -f Makefile

Makefile : Makefile.in
	cd ../..; ./config.status Macaulay2/c/Makefile

# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/c "
# End:
