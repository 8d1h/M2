# @configure_input@
include ../../include/config.Makefile
VPATH = @srcdir@

PACKAGES = @PACKAGES@

RemakeAllDocumentation ?= false
IgnoreExampleErrors ?= false
CheckDocumentation ?= true
RerunExamples ?= false
debugLevel ?= 0

ARGS := RemakeAllDocumentation => $(RemakeAllDocumentation), \
	IgnoreExampleErrors => $(IgnoreExampleErrors), \
	RerunExamples => $(RerunExamples), \
	CheckDocumentation => $(CheckDocumentation), \
	AbsoluteLinks => false, UserMode => false, Verbose => false, \
	InstallPrefix => \"@LOCALSTAGINGAREA@/\", \
	SeparateExec => true

ifeq (${RemakePackages},true)
REMAKEPACKAGES = always
else
REMAKEPACKAGES =
endif

# so the user can override arguments to installPackage:
ifneq "$(IARGS)" ""
ARGS := $(ARGS), $(IARGS)
endif

$(foreach i, $(PACKAGES),\
$(eval \
    check ::; @bindir@/M2@EXE@ -q --stop -e "needsPackage(\"${i}\",LoadDocumentation=>true); check(${i},UserMode=>false); exit 0" \
))

define bld
stage2: @packagesdir@/$(1).installed
@packagesdir@/$(1).installed : $(1).m2 $(wildcard $(1)/*) $(REMAKEPACKAGES)
	: remaking $(1) because of: $$^
	@bindir@/M2@EXE@ $(M2DIRS) \
	    -q --stop --silent \
	    -e errorDepth=0 \
	    -e debugLevel=$(debugLevel) \
	    $(EARGS) \
	    -e "installPackage(\"$(1)\", $(ARGS)); exit 0"
endef
$(foreach i, $(PACKAGES), $(eval $(call bld,$i)))

clean::; rm -rf tmp *.installed
clean check ::; $(MAKE) -C ComputationsBook $@
Makefile: Makefile.in; cd ../..; ./config.status Macaulay2/packages/Makefile
distclean:clean
	$(MAKE) -C ComputationsBook $@
	rm -f Makefile

## here is the list of other files to install along with Macaulay2
@packagesdir@/%.m2 : %.m2 ; @INSTALL_DATA@ $^ $@
stage2: @packagesdir@/eliminate.m2 @packagesdir@/D-modules.m2
# this one we need for compatibility with the book
stage2 : @packagesdir@/LLL.m2
# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/packages "
# End:

