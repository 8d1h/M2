-- sort \\ toString \ unique \\ flatten \\ keys \ select( options \ select(value \ values Macaulay2Core.Dictionary, f -> class f === Function), x -> x =!= null )

{AbsoluteLinks, Adjust, Algorithm, Associative, Author, BasisElementLimit, CallLimit, ChangeMatrix, CodimensionLimit, CompleteIntersection, Date, DebuggingMode, Degree, DegreeLimit,
      DegreeMap, DegreeOrder, DegreeRank, Degrees, Dense, DivideConquer, Email, Encapsulate, Exclude, First, FormattedKey, GBDegrees, HardDegreeLimit, Headline, Heft, Hermitian, Hilbert,
      HomePage, IgnoreExampleErrors, InfoDirSection, InstallPrefix, Inverses, LengthLimit, Limit, MakeDocumentation, MakeInfo, MakeLinks, MinimalGenerators, MinimalMatrix, MonomialOrder,
      MonomialSize, Monomials, Name, Options, Order, Package, PackagePrefix, PairLimit, PairsRemaining, PrimitiveElement, PrintLevel, Projective, RemakeAllDocumentation, Repair, RunDirectory,
      SingleArgumentDispatch, SkewCommutative, SortStrategy, StopBeforeComputation, StopWithMinimalGenerators, Strategy, SubringLimit, Syzygies, SyzygyLimit, SyzygyMatrix, SyzygyRows,
      TotalPairs, Truncate, TypicalValue, Undo, Unmixed, UpdateOnly, UseHilbertFunction, Variable, VariableBaseName, VariableOrder, Variables, Verbose, Verify, Version, Weights, WeylAlgebra}


i6 : f = key -> select(value \ unique values Macaulay2Core.Dictionary, f -> class f === Function and options f =!= null and (options f)#?key)
--warning: f redefined

o6 = f

o6 : Function

i7 : f Truncate

o7 = {basis}

o7 : List
