
i1 : P = projectiveHilbertPolynomial 3

o1 = P
      3

o1 : ProjectiveHilbertPolynomial

i2 : s = hilbertSeries P

         1
o2 = --------
            4
     (1 - T)

o2 : Divide

i3 : numerator s

o3 = 1

o3 : ZZ [T, MonomialOrder => RevLex, Inverses => true]

i4 : R = QQ[a..h];

i5 : I = ideal (a*b, c*d, e*f);

o5 : Ideal of R

i6 : P=hilbertPolynomial(I)

o6 = - P  + 6*P  - 12*P  + 8*P
        1      2       3      4

o6 : ProjectiveHilbertPolynomial

i7 : s = hilbertSeries P

                2    3
     1 + 3T + 3T  + T
o7 = -----------------
                 5
          (1 - T)

o7 : Divide

i8 : numerator s

                2    3
o8 = 1 + 3T + 3T  + T

o8 : ZZ [T, MonomialOrder => RevLex, Inverses => true]

i9 : 
