--package "Macaulay2Core" loaded
--package "PrimaryDecomposition" loaded
--loading the Macaulay2 documentation
--package "Macaulay2" loaded

i1 : R = QQ[x,y,z];

i2 : S = QQ[t,u];

i3 : f = map(S,R,{t^2,t*u,u^2},DegreeMap => i -> 2*i)

               2        2
o3 = map(S,R,{t , t*u, u })

o3 : RingMap S <--- R

i4 : isHomogeneous f

o4 = true

o4 : Boolean

i5 : M = R^{1,2}

      2
o5 = R

o5 : R-module, free, degrees {-1, -2}

i6 : f ** M

      2
o6 = S

o6 : S-module, free, degrees {-2, -4}

i7 : 
