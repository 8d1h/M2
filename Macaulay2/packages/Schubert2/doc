--*- M2; coding: utf-8 -*-

Node
  Key
    Schubert2
  Headline
    computation in intersection theory
  Description
    Text
      The primary purpose of this package is to help compute with intersection theory
      on smooth varieties.  An @TO2{AbstractVariety,"abstract variety"}@ is not given by equations.
      Instead, one gives its intersection ring (usually modulo numerical equivalence),
      its dimension, the Chern class of its tangent bundle, and a method for
      computing integrals.  An @TO2{AbstractSheaf,"abstract sheaf"}@ is represented by its total Chern class (or by its Chern
      character).  An @TO2{AbstractVarietyMap,"abstract variety map"}@ is a map between abstract
      varieties: the information encoded is the pull-back and push-forward
      maps between the corresponding intersection rings.

      This package and its documentation are still rather incomplete, but see the examples in
      @TO "Lines on hypersurfaces"@ and @TO "Conics on a quintic threefold"@, which should
      be enough to figure out some of what's possible.
  Subnodes
    "Lines on hypersurfaces"
    "Conics on a quintic threefold"
  SeeAlso
    AbstractSheaf
    chern
    chi
    TangentBundle
    todd

Node
  Key
    AbstractVariety
  Headline
    The Schubert2 data type of an abstract variety
  Description
   Text
     An abstract variety in {\em Schubert2} 
     is defined by its dimension and a $\QQ$-algebra, interpreted as the rational Chow ring.
     For example, the following code defines the abstract variety corresponding to $\PP^2$,
     with its Chow ring A. Once the variety X is created, we can access its structure
     sheaf OO_X, represented by its Chern class.

   Example
     A=QQ[t]/ideal(t^3)
     X=abstractVariety(2,A)
     OO_X
     chern OO_X
   Text
     A variable of type AbstractVariety is actually of type MutableHashTable, and can
     contain other information, such as its @TO TangentBundle@. Once this is defined,
     we can compute the Todd class.
   Example
	X.TangentBundle  = abstractSheaf(X,Rank=>2, ChernClass=>(1+t)^3)
	todd X
   Text
     If we want things like the Euler characteristic of a sheaf, we must also
     specify a method to take the @TO integral@ for the Chow ring A; in the case
     where A is Gorenstein, as is the Chow ring of a complete nonsingular variety,
     this is a functional that takes the highest degree component. 
     In the following example, The sheaf OO_X is
     the structure sheaf of X, and OO_X(2t) is the line bundle with first Chern class 2t.
     The computation of the Euler Characteristic is made using the Todd class and the 
     Riemann-Roch formula.
   Example
     integral A := f -> coefficient(t^2,f)    
     chi(OO_X(2*t))
   Text
      There are several other methods for constructing abstract varieties: the following functions
      construct basic useful varieties (often returning the corresponding structure map).
      @TO projectiveSpace@,
      @TO projectiveBundle@,
      @TO flagBundle@,
      @TO base@.

      This package and its documentation are still rather incomplete, but see the examples
      @TO "Lines on hypersurfaces"@ and @TO "Conics on a quintic threefold"@, which should
      be enough to figure out some of what's possible.
  SeeAlso
    AbstractSheaf
    chern
    chi
    TangentBundle
    todd


Node
  Key
    AbstractSheaf 
  Headline
    the class of sheaves given by their Chern classes
  Description
   Text
     This is the class of a sheaf as defined in the package
     @TO Schubert2@.
     An abstract sheaf is really the data of its base variety
     (see @TO AbstractVariety@), @TO Rank@, @TO ChernClass@...

     For example, the Horrocks-Mumford bundle on projective 4-space
     can be represented by the following text. We first compute a ``base variety''
     that is a point {\tt pt}, and a variable integer named {\tt n}, in 
     terms of which we can compute the Hilbert polynomial.

   Example
    pt = base(n)
    X = projectiveSpace(4,pt,VariableName => h)
    F = abstractSheaf(X, Rank => 2, ChernClass => 1 + 5*h + 10*h^2)
    chi(F**OO_X(n*h))

   Text
     Here in the description of X the number 4 is the rank of the trivial bundle, pt 
     is the base variety of the projective space (in general, we allow
     projective spaces over an arbitrary base AbstractVariety), and the 
     variable name specifies the variable to use to represent the first
     Chern Class of the tautological quotient line bundle on the projective space.
  SeeAlso
    AbstractVariety


Node
  Key
    projectiveSpace
  Headline
    Makes an AbstractVariety representing projective space
  Usage
    P = projectiveSpace(n)
    P = projectiveSpace(n, baseVariety)
    P = projectiveSpace(n, baseVariety, VariableName => h)
  Inputs
    n: ZZ
    baseVariety: AbstractVariety
    h: Symbol
  Outputs
    P:AbstractVariety
  Description
   Text
     Constructs the projective space {\tt P} of 1-quotients of the trivial bundle on
     the base variety  {\tt baseVariety}. The Chow ring is set to be the polynomial ring 
     over the Chow ring of {\tt baseVariety}, with variable {\tt h}. The tangent bundle
     of X is available as an @TO AbstractSheaf@, accessed by {\tt X.TangentBundle}.
     Here baseVariety and VariableName are optional.
   Example
     P = projectiveSpace 3
     todd P
     chi OO_P(3)
   Text
     If we want a projective space where we can compute the Hilbert Polynomial of a sheaf,
     we need a variable to represent an integer. We define a base variety that is a point {\tt pt}
     containing this variable.
   Example
     pt = base n
     Q = projectiveSpace(4,pt, VariableName => h)
     chi OO_Q(n)
   Text
     If be build a projective space over another variety, the dimensions add:
   Example
     baseVariety = projectiveSpace(4, VariableName => h)
     P = projectiveSpace (3,baseVariety, VariableName => H)
     dim P
     todd P

Node
  Key
    base
  Headline
    an abstract variety, defined with some parameters and some bundles
  Usage
    X = base()
    X = base(p)
    X = base(n,p)
    X = base(n,p,q,..,Bundle=>(A,r,a),..)
  Inputs
    n:ZZ
    p:Symbol
    q:Symbol
    A:Symbol
    r:ZZ
    a:Symbol
  Outputs
    X:AbstractVariety
  Consequences
    X has dimension n (if n is present; else 0) and has symbols p,q... defined in its Chow ring (if they are present.
    A is a  bundle defined on X with rank r and Chern classes a_1..a_r (if this option is present).
  Description
   Text
     The symbols p,q... can be used as integer variables in Chow ring computations
   Example
     X = base(1,p,q,Bundle =>(A,1,a), Bundle => (B,1,b))
     Y = projectiveSpace(3,X,VariableName => H)
     f = Y.StructureMap
     x = chern f_*((f^*(OO_X(p*a_1)))*OO_Y(q*H))
     y = chern f_*OO_Y((f^*(p*a_1))+q*H)
     x == y
  Caveat
     Be sure that A... are symbols; if they have already been defined there will be trouble.
  SeeAlso
    projectiveSpace

Node
  Key
    (chern,ZZ,ZZ,AbstractSheaf)
  Headline
    Get the Chern class of an abstract sheaf 
  Usage
    c = chern(n,m,A)
  Inputs
    n:ZZ
    m:ZZ
    A:AbstractSheaf
  Outputs
    c: List
  Description
   Text
     Chern classes of an abstract sheaf are computed.  If called with
     three arguments as above, a list of the Chern classes {\tt c_n(A) ..
     c_m(A)} are returned.  Here {\tt 0\le n\le m} are integers.
     {\tt chern} may also be called without one or both of these integer
     arguments, in which case just one Chern class, or the total Chern
     class is returned, respectively.
     In the following example, we consider two vector bundles
     {\tt A} and {\tt B} of ranks 2 and 3, respectively, on a variety
     of which we only know that its dimension is 3.  
   Example
     base(3, Bundle => (A,2,a), Bundle => (B,3,b))
     chern B
     chern(-A)
     chern(2,A*B)
     chern(2,3,B-A)
   Text
     The next example gives the Chern classes of the twists of
     a rank-2 vector bundle on the projective plane
   Example
     pt = base(n,p,q)
     P2 = projectiveSpace(2,pt)
     E = abstractSheaf(P2, Rank=>2, ChernClass=>1+p*h+q*h^2)
     chern(E*OO(n*h))
  SeeAlso
    segre

Node
  Key
     "Lines on hypersurfaces"
  Headline
     Example using Schubert2
  Description
   Text
	There are d+1 conditions for a line to be
	contained in a general hypersurface of degree d in $\PP^n$.
	The Grassmannian of lines in $\PP^n$ has dimension 2(n-1).  Therefore,
	when d+1=2(n-1), we should expect a finite number of lines.
	Here is a way of computing the number using {\em Schubert2}.  In the case
	of lines on a quintic hypersurface in $\PP^4$, this computation was done
	by Hermann Schubert in 1879.

	We will first illustrate the method by computing the number
	of lines on a cubic surface in P3.

	We first construct an @TO AbstractVariety@ representing
	the Grassmannian of lines in P3 with its tautological sub-
	and quotient bundles.
   Example
     G = flagBundle({2,2}, VariableNames => {,c})
     (S,Q) = G.Bundles
   Text
	Any cubic surface is given by a cubic form on P3,
	that is, an element of the third symmetric power of the
	space of linear forms, which is the trivial rank 4 bundle
	on P3.  Its image in the third symmetric power
	{\tt symmetricPower(3,Q)}  of the
	quotient bundle {\tt Q} vanishes at those points of the
	Grassmannian that correspond to lines on which the
	cubic form vanishes identically, that is, lines
	contained in the cubic surface.  The class of this
	locus is the top Chern class of this bundle.
   Example
	B = symmetricPower(3,Q)
	c = chern(rank B,B)
	integral c
   Text
	We can do the same thing for any n, (with d=2n-3) as
	follows:
   Example
	f = n->(G = flagBundle({n-1,2}); integral chern(symmetricPower(2*n-3,(G.Bundles)_1)))
	for n from 2 to 8 do print( time f(n))
   Text
	The function {\tt time f 20} takes 16 seconds on a
	64-bit MacBook Pro and produces a number of 53 digits.

	Note: In characteristic zero, using Bertini's theorem,
	the numbers computed can be proved to be equal
	to the actual numbers of distinct lines 
	for general hypersurfaces.  In P3, every smooth cubic
	surface in characteristic zero have exactly 27 lines.
	In higher dimensions there may be smooth hypersurfaces for which
	the number of lines is different from the "expected" number
	that we have computed above.
	For example, the Fermat quintic threefold has an infite number
	of lines on it.
  SeeAlso       
     "Conics on a quintic threefold"

Node
  Key
     "Conics on a quintic threefold"       
  Headline
     Example using Schubert2
  Description
   Text
     The number of conics (=rational curves of degree 2) on a general
     quintic hypersurface in $\PP^4$ was computed by S. Katz in 1985.  Here
     is how the computation can be made with {\em Schubert2}.

     Any conic in $\PP^4$ spans a unique plane.  Hence the space of conics in
     $\PP^4$ is a certain $\PP^5$-bundle over the Grassmannian {\tt G} of planes in $\PP^4$.  This
     space is called {\tt X} in the following code:
   Example
     G = flagBundle{2,3}    -- Grassmannian of planes in P4
     (S,Q) = G.Bundles        -- Q = rank 3 tautological quotient bundle
     B = symmetricPower(2,Q)  -- The bundle of quadratic forms on the variable plane
   Text
     As a matter of convention, a projectiveBundle in {\em Schubert2} parametrizes the
     rank 1 quotients.  The $\PP^5$-bundle of conics is given by sublinebundles of B, so
     we take the dual in the following:
   Example  
     X = projectiveBundle(dual B, VariableNames => {,{z}})
   Text
     The equation of the general quintic is a section of the fifth symmetric
     power of the space of linear forms on $\PP^4$.  The induced equation on any given
     conic is an element in the corresponding closed fiber of a certain vector
     bundle {\tt A} of rank 11 on the parameter space {\tt X}.  On any given plane P,
     and conic C in P, we get the following exact sequence:
	   $$ 0 \to{} H^0(O_P(3)) \to{} H^0(O_P(5)) \to{} H^0(O_C(5)) \to{} 0$$
     As C varies, these sequences glue to a short exact sequence of bundles on X,
     to give
   Example
     A = symmetricPower_5 Q - symmetricPower_3 Q ** OO(-z)
   Text
     A given conic is contained in the quintic if and only if the equation of the
     quintic vanishes identically on the conic.  Hence the class of the locus of
     conics contained in the quintic is the top Chern class of {\tt A}.  Hence
     their number is the integral of this Chern class:
   Example
     integral chern A
  SeeAlso
    "Lines on hypersurfaces"

Node
  Key
      schubertCycle
  Headline
      Schubert Cycles on a Grassmannian in terms of Chern classes of the Tautological bundle.
  Usage
     c=schubertCycle(F,s)
  Inputs
     F:FlagBundle 
     s:Sequence
  Outputs
     c:RingElement 
  Description
   Text
     If F is the flag bundle parametrizing subspaces of dimension s and their respective
     quotient spaces of dimension q of an n-dimensional vector space A, such as
   Example
     base(0, Bundle=>(A, 8, a))
     F=flagBundle ({5,3},A)
   Text
     where q = 3 and n = 8, we may think of F as the space of projective (q-1)-planes
     in $\PP^{n-1}$. Fix a complete flag of projective subspaces A_0..A_{n-1} in A.
     The mechanism @ TT "F_(a_1..a_q)" @, where $0 \le{} a_1 \le{} ... a_q \le{} n-1$,
     produces the class of the Schubert cycle consisting of those
     (q-1)-planes meeting $A_i$ in dimensions $a_1 ... a_q$.
  Caveat
    The code only deals with Grassmannians, not with general flag bundles.


-- keep these next lines at the end of this file
-- Local Variables:
-- compile-command: "make -C $M2BUILDDIR/Macaulay2/packages PACKAGES=Schubert2 pre-install"
-- End:

