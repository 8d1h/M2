ZZ[t..u, Degrees => {2:1}, MonomialOrder => { MonomialSize => 32, GroupRevLex => 2, Position => Up}, Inverses => true]
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (0,1-u^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (0,1-u^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (0,1-u^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (0,1-u^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (0,1-u^3) )
ZZ[t..u, Degrees => {2:1}, MonomialOrder => { MonomialSize => 32, Weights => {0,-1}, GroupRevLex => 2, Position => Up}, Inverses => true]
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-t^3,1-t)) === (0,1-t^3) )
assert( (quotientRemainder(1-u^3,1-u)) === (1+u+u^2,0) )
assert( (quotientRemainder(1-u^3,1-u)) === (1+u+u^2,0) )
assert( (quotientRemainder(1-u^3,1-u)) === (1+u+u^2,0) )
assert( (quotientRemainder(1-u^3,1-u)) === (1+u+u^2,0) )
assert( (quotientRemainder(1-u^3,1-u)) === (1+u+u^2,0) )
