----------------------------
-- IDEAL nodes ---------
----------------------------

document { "creating an ideal",
     MENU {
	  TO "ideal",
	  TO "monomialIdeal",
	  TO "monomialCurveIdeal"
	  },
     "An ideal ", TT "I", " is represented by its generators.  
     We use the function ", TO "ideal", " to construct an ideal.",
     EXAMPLE {
	  "R = QQ[a..d];",
	  "I = ideal (a^2*b-c^2, a*b^2-d^3, c^5-d)"
	  },
     "For a monomial ideal you can use the 
     function ", TO "monomialIdeal", ".",
     EXAMPLE {
	  "J = monomialIdeal (a^2*b, b*c*d, c^5)"
	  },
     "The distinction is small since a monomial ideal can be 
     constructed using ", TT "ideal", " .  However, there are a 
     few functions, like ", TO "primaryDecomposition", " that run 
     faster if you define a monomial ideal 
     using ", TT "monomialIdeal", ".",
     PARA,
     "An interesting class of ideals can be obtained as the 
     defining ideals in projective space of monomial curves.  
     For example the twisted cubic is the closure of the set of 
     points ", TT "(1,t^1,t^2,t^3)", " in projective space.  We 
     use a list of the exponents and ", TO "monomialCurveIdeal", " to 
     get the ideal.",
     EXAMPLE {
	  "monomialCurveIdeal(R,{1,2,3})"
	  }
     }

document { "ideals to and from matrices",
     MENU {
	  TO "generators",
	  TO "ideal"
	  },
     "After defining a matrix (see ", TO "input a matrix", ")
     , ", TT "M", ", the ideal generated by the entries of the matrix 
     is obtained using the command ", TO "ideal", ".",
     EXAMPLE {
	  "R = ZZ/101[a..e];",
	  "M = matrix{{a^2*b-c^2, a*b^2-d^3, c^5-d},{a^2*b, b*c*d, c^5}}",
	  "ideal M"
	  },
     NOINDENT, "In much the same way we can construct a 1 by 
     n (where n is the number of generators of ", TT "I", "), 
     matrix from the n generators of an ideal ", TT "I", " using 
     the command, ", TO "generators", ".",
     EXAMPLE {
	  "I = ideal(a^2*b-c^2+c*d, a*b^2-b*d^3, c^5,d+e);",
	  "generators I"
	  },
     "The abreviation ", TO "gens", " can be used for ", TT "generators", "." 
     }

document { "ideals to and from modules",
     MENU {
	  TO "module",
	  TO "ideal",
	  TO "coker gens, or R^1/I",
	  "modules versus ideals for computations"
	  },
--     "There are two main ways to consider an ideal as 
--     a module.  First, as a submodule of the rank one free 
--     module, ", TT "R", " as the image of the map defined 
--     by the 1 by n matrix consisting of the generators. The 
--     easiest way to do this is to use the 
--     function ", TT "module", ".",
     "An ideal ", TT "I", " is also an ", TT, "R", "-submodule.  In
     Macaulay 2 we distinguish between when we are thinking of ", TT "I", " as
     as ideal or a module.  If it is first defined as an ideal, it is easily
     turned into a module using the function ", TT "module", " and for any
     submodule of the rank one free module ", TT "R", " we can obtain an ideal of the generators using the function ", TT "ideal", ".",
     EXAMPLE {
	  "R = ZZ/32003[x,y,z];",
	  "I = ideal(x^2,y*z-x);",
	  "module I"
	  },
     NOINDENT, " For any submodule of the rank one free 
     module ", TT "R", " we can obtain an ideal of the generators 
     using the function ", TT "ideal", ".",
     EXAMPLE {
	  "A = matrix{{x*y-z,z^3}};",
	  "M = image A",
	  "ideal M",
	  },
     NOINDENT, "We also often work with ", TT "R/I", " as 
     an ", TT "R", "-module.  Simply typing ", TT "R/I", " at a prompt
     in Macaulay 2 constructs the quotient ring (see ", TO "quotient rings", ").  
     There are two ways to tell Macaulay 2 that we want to work with this 
     as a module.",
     EXAMPLE {
	  "coker generators I",
	  "R^1/I"
	  },
     "Some functions in Macaulay 2 try to make an informed decision 
     about ideal and modules.  For example, ", 
     EXAMPLE {
	  --"J = ideal(x*y-z^2,x*z^3-y^4);",
	  "resolution I"
	  },
     NOINDENT, "computes the resolution of the module ", TT "R^1/I", ".  
     The functions ", TO "dimension", " and ", TO "degree", " also 
     operate on ", TT "R^1/I", " if the input 
     is ", TT "I", " or ", TT "R^1/I", ".  However, the 
     function ", TO "hilbertPolynomial", " computes the Hilbert 
     polynomial of the module ", TT "I", " if the input 
     is ", TT "hilbertPolynomial I", ".",     
     PARA, "For basic information about working with 
     modules see ", TO "modules I", "."
     }

document { "sums, products, and powers of ideals",
     MENU {
	  TO "+",
	  TO "*",
	  TO "^"
	  },
     "A few examples of the basic arithmetic functions for ideal.", 
     EXAMPLE {
	  "R = ZZ/101[a..d]/(b*c-a*d,c^2-b*d,b^2-a*c);",
	  },
     "For more information about quotient rings see ", TO "quotient rings", ".",
     EXAMPLE {
	  "I = ideal (a*b-c,d^3);",
	  "J = ideal (a^3,b*c-d);",
	  "I+J",
	  "I*J",
	  "I^2"
	  },
     }

document { "equality and containment",
     MENU {
	  TO "==",
	  TO "!=",
	  TO "%",
	  TO "I == 0",
	  TO "I == 1",
	  TO "isSubset"
	  },
     "Equality and containment can sometimes be subtle in Macaulay 2.  For 
     example, testing if an ideal is equal to 0 or 1 are special functions 
     so we give an example here.  We try to illustrate the subtleties.  To 
     test if two ideals in the same ring are equal use ", TO "==", ".",
     EXAMPLE {
	  "R = QQ[a..d];",
	  "I = ideal (a^2*b-c^2, a*b^2-d^3, c^5-d);",
	  "J = ideal (a^2,b^2,c^2,d^2);",
	  "I == J",
	  "I != J",
	  },
     NOINDENT, "The function ", TT "%", " reduces an element with 
     respect ot a Groebner basis of the ideal. ", 
     EXAMPLE {
	  "(1+a+a^3+a^4) % J"
	  },
     NOINDENT, "We can then test membership in the ideal by comparing 
     the answer to 0 using", TT "==", ".",
     EXAMPLE {
	  "(1+a+a^3+a^4) % J == 0",
      	  "a^4 % J == 0",
	  },
     NOINDENT, "Containment for two ideals is tested 
     using ", TO "isSubset", ".",
     EXAMPLE {
	  "isSubset(I,J)",
	  "isSubset(I,I+J)",
	  "isSubset(I+J,I)"
	  },
     "The function ", TT "I == 1", " checks to see if the 
     ideal is equal to the ring.  The function ", TT "I == 0", " checks 
     to if the ideal is identically zero in the given ring.",
     EXAMPLE {
	  "I = ideal (a^2-1,a^3+2);",
	  "I == 1",
	  "S = R/I",
	  "S == 0"
	    }
     }

document { "extracting generators of an ideal",
     MENU {
	  TO "_",
	  TO "generators",
	  TO "numgens",
	  TO "mingens",
	  TO "trim",
	  TO "toString"
	  },
     "Once an ideal has been constructed it is possible to 
     obtain individual elements.   As always in Macaulay 2, 
     indexing starts at 0. ",
     EXAMPLE {
	  "R = ZZ[w,x,y,z];",
	  "I = ideal(z*w-2*x*y, 3*w^3-z^3,w*x^2-4*y*z^2,x);",
	  "I_0",
	  "I_3"
	  },
     NOINDENT, "It is possible to get a matrix or a list of the elements. ",
     EXAMPLE{
	  "gens I",
	  "first entries gens I"
	  },
     NOINDENT, "We can obtain the number of elements generating the ideal.",
     EXAMPLE{
	  "numgens I"
	  },
     NOINDENT, "To obtain a minimal generating set of a homogeneous ideal 
     as a matrix use ", TO "mingens", " and as an ideal use ", TO "trim", ".",
     EXAMPLE {
	  "mingens I",
	  "trim I"
	  },
     NOINDENT, "The function ", TT "mingens", "is only well-defined for a 
     homogeneous ideal or in a local ring.  However, one can still try to 
     get as small a generating set as possible and when it is implemented
     this function will be done by", TT "trim", ".",      
     PARA,
     "If the ideal was defined using a function 
     like ", TT "monomialCurveIdeal", "and the generators 
     are desired in the usual format for input of an ideal, the 
     function ", TO "toString", "is very useful. 
     (Note:  We are changing rings because ", TO "monomialCurveIdeal", " 
	  is not implemented for rings over, ", TT "ZZ", ".)",
     EXAMPLE {
	  "R = QQ[a..d];",
	  "I = monomialCurveIdeal(R,{1,2,3});",
	  "toString I"
	  }
     }

document { "dimension, codimension, and degree",
     MENU {
	  TO "dim",
	  TO "codim",
	  TO "degree"
	  },
     EXAMPLE {
	  "R = ZZ/101[x,y,z];",
	  "I = ideal(x^3-y*z^2,x*y-z^2,x*z);",
	  "codim I",
	  "dim I",
	  "degree I",
	  },
     "The functions ", TO "dim", " and ", TO "degree", " compute 
     the dimension and degree of the ring ", TT "R/I", "."
     }

document { "intersection of ideals",
     MENU {
	  TO "intersect"
	  },
     EXAMPLE {
	  "R = QQ[a..d];",
	  "intersect(ideal(a,b),ideal(c*d,a*b),ideal(b*d,a*c))"
	  }
     }

document { "ideal quotients and saturation",
     MENU {
	  TO ":",
	  TO "quotient",
	  TO "saturate"
	  },
     EXAMPLE {
	  "R = QQ[a..d];",
	  "I = ideal (a^2*b-c^2, a*b^2-d^3, c^5-d);",
	  "J = ideal (a^2,b^2,c^2,d^2);",
	  "I:J",
	  "P = quotient(I,J)"},
     "The functions ", TO ":", " and ", TO "quotient", " perform 
     the same basic operation, however ", TT "quotient", " takes 
     two options.  The first is ", TT "MinimalGenerators", " which 
     has default value ", TT "true", " meaning the computation is done computing 
     a minimal generating set.  You may want to see all of the 
     generators found, setting ", TT "MinimalGenerators", " to ", TT "false", 
     "accomplishes this.",
     EXAMPLE {
	  "Q = quotient(I,J,MinimalGenerators => false)", -- gives odd output.
	  "Q == P"
	  },
     "The second option is ", TT "Strategy", ".  The default 
     is to use ", TT "Iterate", " which computes successive 
     ideal quotients.  Currently (16 May 2001) the other possible options
     do not work.",
--     "The other option is ", TT "Linear", " as 
--     illustrated.",
--     EXAMPLE {
--	  "quotient(I,J,Strategy => Linear)" -- NOT IMPLEMENTED!
--	  }
     }

document { "radical of an ideal",
     MENU {
	  TO "radical",
	  "intersect components I" -- Alternate way int min using decomp.
	  },
     EXAMPLE {
	  "S = ZZ/101[x,y,z]",
	  "I = ideal(x^3-y^2,y^2*z^2)",
	  "radical I"
     	  },
     "An alternate way to find the ", TO "radical", " of an 
     ideal ", TT "I", " is to take the interesection of its 
     minimal prime ideals.  To find the ", TO "minimal primes 
     of an ideal", TT "I", " use the function ", TT "decompose", ".  
     Then use ", TO "intersect", ".",
     EXAMPLE {
	  "intersect decompose I"
	  }
     }

document { "minimal primes of an ideal",
     MENU {
	  TO "decompose",
	  "warning"
	  },
     "To obtain a list of the minimal associated primes for an 
     ideal ", TT "I", " (i.e. the smallest primes 
     containing ", TT "I", "), use the function ", TO "decompose", ".",
     EXAMPLE {
	  "R = QQ[w,x,y,z];",
	  "I = ideal(w*x^2-42*y*z, x^6+12*w*y+x^3*z, w^2-47*x^4*z-47*x*z^2)",
	  "decompose I"
	  },
     NOINDENT, "If the ideal given is a prime ideal 
     then ", TT "decompose", " will return the ideal given.",
     EXAMPLE {
	  "R = ZZ/101[w..z];",
	  "I = ideal(w*x^2-42*y*z, x^6+12*w*y+x^3*z, w^2-47*x^4*z-47*x*z^2);",
	  "decompose I"
     	  },
     "Warning (5/15/01):  If you stop a 
     function midprocess and then run ", TT "decompose", " an 
     error is given.  Restarting Macaulay 2 and then 
     running ", TT "decompose", " works around this.",
     PARA,
     "See ", TO "associated primes of an ideal", " for information 
     on finding associated prime ideals 
     and ", TO "primary decomposition", " for more information 
     about finding the full primary decomposition of an ideal."   
     }

document { "associated primes of an ideal",
     MENU {
	  TO "ass"
	  },
     "The function ", TO "ass", " returns a list of the 
     associated prime ideals for a given ideal ", "I", ".  The 
     associated prime ideals correspond to the irreducible 
     components of the variety associated to, ", TT "I", ".  They are 
     useful in many applications in commutative algebra, algebraic 
     geometry and combinatroics.",  
     -- For a tutorial about associated prime ideals and 
     -- primary decomposition, see ", TO "commutative algebra", ".",
     EXAMPLE {
	  "R = ZZ/101[a..d];",
	  "I = ideal(a*b-c*d, (a*c-b*d)^2);",
	  "ass I"
	  },
     "See ", TO "primary decomposition", " for more information 
     about finding primary decompositions.  To find just the 
     minimal prime ideals see ", TO "minimal primes of an ideal", "."   
     }

document { "primary decomposition",
     MENU {
	  "introduction",
	  "example",
	  "strategies",
	  "warning",
	  },
     "It is now possible to find the primary decomposition 
     of an ideal in Macaulay 2.  The 
     function ", TO "primaryDecompostion", " applied to an 
     ideal ", TT "I", " returns a list of ideals.  These ideals 
     have two key features, first, their intersection is equal to 
     the ideal ", TT "I", " and second their radicals are prime 
     ideals.  So this is a decomposition of the ideal into 
     components whose corresponding varieties are irreducible.  
     The decomposition returned is irredundent, which means that 
     the radicals of the ideals returned are distinct prime ideals 
     which are the associated prime ideals 
     for ", TT "I", " (see ", TO "associated primes of an ideal", ").",
     
     PARA, "There are several different 
     strategies for finding the decomposition that can be 
     used in this program.  First we give an example and 
     then discuss the strategies breifly.",
     EXAMPLE {
	  "R = ZZ/101[a..d];",
	  "I = ideal(a*b-c*d, (a*c-b*d)^2);",
	  "primaryDecomposition I"
	  },
     NOINDENT, "If the associated prime ideals corresponding to the
     primary components returned by ", TT "primaryDecomposition", " are 
     desired, then the function ", TO "ass", " is used.  The list 
     given by ", TT "ass", " is in direct correspondence with that 
     given by ", TT "primaryDecomposition", ", i.e. the first entry 
     in the list given by ", TT "ass", "is the radical of the first 
     entry in the list given by ", TT "primary decomposition", ".",
     PARA,
     "There are four strategies available.  The default strategy is the 
     the algorithm of Shimoyama-Yokoyama and is indicated 
     by ", TT "SY", "in Macaulay 2.  It is also possible to use the 
     algorithmm of Eisenbud-Huneke-Vasconcelos, ", TT "EHV", ", a 
     hybrid of these two algorithms (SY and EHV), ", TT "Hybrid", ", and the 
     algorithm of Gianni-Trager-Zacharias, ", TT "GTZ", ".  There are two 
     other options for strategy, but they do not return a primary 
     decomposition, but something related.  The first is the 
     strategy ", TT "Monomial", " which computes the unique irreducible 
     decomposition of a monomial ideal using the Alexander dual of the 
     ideal.  For this strategy a monomial ideal must be inputed.  The second 
     is the strategy is ", TT "Binomial", "which returns a cellular 
     decomposition of a binomial ideal.  For this strategy a binomial 
     ideal must be inputed.",
     EXAMPLE {
	  "primaryDecomposition(I, Strategy => EHV)",
	  },
--     "An example of a monomial ideal using both monomial and binomial.",
--     EXAMPLE {
--	  "I = ideal(a^2*b,a*c^2,b*d,c*d^2);",
--	  "primaryDecomposition(I, Strategy => Monomial)",
--	  "primaryDecomposition(I, Strategy => Binomial)"
--	  },
     "Warning (5/15/01):  This function is underconstruction.  For 
     example, the 
     strategies, ", TT "Monomial", ", ", TT "GTZ", " and ", TT "Hybrid", " are 
     not written, or do not function as stated.  Further, both 
     the ", TT "Monomial", " and ", TT "Binomial", " strategies may 
     be moved to separate functions.  "
     }

-------------------
-- RING MAP nodes -
-------------------

document { "substitute values for variables",
     MENU {
	  TO "substitute",
	  }
     }

document { "working with multiple rings",
     MENU {
	  TO "use",
	  TO "substitute(J,S)",
	  TO "substitute(J,vars S)",
	  }
     }

document { "basic construction, source and target of a ring map",
     MENU {
	  TO "map",
	  TO "source",
	  TO "target",
	  TO "F.matrix"
	  }
     }

document { "evaluation and composition of ring maps",
     MENU {
	  TO "F(m)",
	  TO "F*G"
	  }
     }

document { "kernel and image of a ring map",
     MENU {
	  TO "kernel",
	  TO "image"
	  }
     -- if module and ring map are homogeneous, and Hilbert F is known,
     -- this is used in computing the kernel (or image).
     }



