# @configure_input@
justM2 default :: initialize phase1
quick-install : justM2 install
include ../../include/config.Makefile
VPATH = @srcdir@
srcdir = $(shell cd @srcdir@; /bin/pwd)
all:: initialize
Makefile : Makefile.in ; cd ../.. && ./config.status Macaulay2/m2/Makefile
emacs html: all; $(MAKE) -C ../$@

##############################
.SUFFIXES: .m2
.PHONY: clean all install check html clean distclean check default initialize prep

LOADSEQUENCE = $(patsubst %, @srcdir@/%, $(shell cat @srcdir@/loadsequence))
DOCSEQUENCE  = $(patsubst %, @srcdir@/%, $(shell cat @srcdir@/docseq ))

# M2 files made in the build directory are not mentioned in LOADSEQUENCE above
MADEM2FILES := loads.m2 tutorials.m2 layout.m2

initialize:: srcdir
srcdir:; ln -s @srcdir@ srcdir

ifdef MP
mpcodes.m2: ../../include/MP.h mpcodes.sed
	sed -f mpcodes.sed $< > $@
all:: mpcodes.m2
MADEM2FILES += mpcodes.m2
endif

TUTORIALS := $(wildcard ../tutorial/final/*.out)

DUMPEDM2FILES := $(LOADSEQUENCE) @srcdir@/setup.m2 $(MADEM2FILES)

ifneq "$(DUMPDATA)" "no"
DUMPEDM2FILES := $(DUMPEDM2FILES) @srcdir@/dumpdata.m2
endif

NONDOCM2FILES = @srcdir@/setup.m2 $(LOADSEQUENCE) \
	$(patsubst %, @srcdir@/%, dumpdata.m2 eg.m2 sagbi.m2)

M2FILES = $(NONDOCM2FILES) $(DOCSEQUENCE)

loads.m2 : loads.awk loadsequence
	@echo making $@
	@awk -f $^ >$@

Macaulay2-doc.m2 : loads.awk docseq 
	@echo making $@
	@awk -f $^ >$@

tutorials.m2 : $(TUTORIALS)
	@ echo making tutorials.m2
	@ ls $^ |awk '{printf "load \"%s\"\n", $$0}' >$@

################################# cache
cache cache/doc ../tutorial/final/cache/doc :; mkdir -p $@
clean ::; rm -rf cache
initialize :: cache cache/doc ../tutorial/final/cache/doc
################################# temporary directories for examples
initialize :: cache/doc/cache/doc cache/doc/tmp
cache/doc/cache/doc cache/doc/tmp :; mkdir -p $@
#################################

default:: TAGS.doc
TAGS.doc : docseq
	@echo making $@
	@../util/echoout '>$@' $(foreach i, $(DOCSEQUENCE),  $(i),0)
clean::; rm -f TAGS.doc

layout.m2 : ../../include/config.Makefile
	echo 'LAYOUT = new HashTable from $(LAYOUT)' | sed 's/,/,%     /g' | tr % '\n' >$@

default:: TAGS
clean::; rm -f TAGS
TAGS: loadsequence
	@echo making $@
	@../util/echoout '>$@' $(foreach i, \
			      $(M2FILES) \
			      $(wildcard \
				@srcdir@/*.awk \
				@srcdir@/../basictests/*.m2 \
				@srcdir@/../test/*.m2 \
				@srcdir@/../html/*.m2 \
				@srcdir@/../book/*.m2 \
				@srcdir@/../packages/*.m2 \
				@srcdir@/../packages/*/*.m2 \
				@srcdir@/../emacs/makehlp.m2 \
				@srcdir@/../emacs/makem2.m2 \
				@srcdir@/../*/COPYRIGHT \
				@srcdir@/../emacs/makesyms.m2 \
				@srcdir@/../tutorial/prelim/*.m2 \
				@srcdir@/../tutorial/final/*.m2 \
				@srcdir@/../*/Makefile* \
				@srcdir@/../CHANGES), \
			       $(i),0)

prep :: $(DUMPEDM2FILES)

phase1 :: prep

ifneq "$(DUMPDATA)" "no"
phase1 :: ../$(DUMPDATAFILE)
../$(DUMPDATAFILE) : $(DUMPEDM2FILES) ../bin/Macaulay2
	 #------ phase 1: reading *.m2 (not the documentation), making $@
	rm -f ../$(DUMPDATAFILE)
	time ../bin/Macaulay2 -q --silent --stop ../../../Macaulay2/m2/dumpdata.m2 -e 'dump "$(DUMPDATAFILE)"'
endif

phase1 :: ../cache/Macaulay2-made
../cache/Macaulay2-made : $(DUMPEDM2FILES) ../bin/Macaulay2$(EXE)
	touch $@

phase2 :: initialize
phase2 :: phase1
phase2 :: ../cache/Macaulay2-pre cache/doc/.made 
	touch $@

../cache/Macaulay2-pre cache/doc/.made : \
		$(DUMPEDM2FILES) ../bin/Macaulay2 $(DOCSEQUENCE) $(TUTORIALS) docseq Macaulay2-doc.m2
	 #------ phase 2: making cache/doc/*.example, cache/tests/*.m2, and $@
	rm -rf ../cache/Macaulay2-tmp
	rm -rf cache/tests
	mkdir  cache/tests
	../../bin/M2 -q --silent --stop \
		-e 'phase = 2' \
		-e 'errorDepth 0' \
		-e 'DocDatabase = openDatabaseOut "../cache/Macaulay2-tmp"' \
		Macaulay2-doc.m2 -e 'exit(0)'
	mv ../cache/Macaulay2-tmp ../cache/Macaulay2-pre
	touch cache/doc/.made cache/tests/.made

## .gdbinit
justM2 all:: .gdbinit .gdb-files .gdb-run-it
gdb: .gdbinit .gdb-files; gdb ../bin/Macaulay2$(EXE)
.gdbinit: .gdbinit.$(USER); cp $< $@
clean::; rm -f .gdbinit
.gdbinit.$(USER):; cp @srcdir@/.gdbinit.dan $@
.gdb-files: Makefile
	echo 'echo -- loading .gdb-files\n' >$@
	echo 'file ../bin/Macaulay2' >>$@
clean :: ; rm -f .gdb-files
.gdb-run-it: Makefile
	echo 'echo -- loading .gdb-run-it\n' >$@
	echo 'echo \n' >>$@
	echo 'run -q' >>$@
clean :: ; rm -f .gdb-run-it
##
backup : CVS/Entries
CVS/Entries : $(M2FILES)
	mount /a.ext2
	tar cfv - $? | (cd /a.ext2; mkdir -p m2; cd m2; tar xf -)
	umount /a.ext2

profile : gmon.out
	gprof ../bin/Macaulay2 >profile
clean ::; rm -f profile

INPUTS := cache/doc/sample cache/doc/expression
cache/doc/sample: sample; cp $< $@
cache/doc/expression: expression; cp $< $@

ifeq "$(DEBUG)" "yes"
EGFLAGS = -k
EGMORE = || true
endif

phase3 : initialize phase2 cache/doc/sample cache/doc/expression
	 #------ phase 3: running new example input files: cache/doc/*.example
	$(MAKE) -C cache/doc -f ../../Makefile.egs srcdir=$(srcdir)
	touch $@

all :: phase4
phase4 : phase3 ../cache/Macaulay2-doc
../cache/Macaulay2-doc : ../cache/Macaulay2-pre \
		$(MADEM2FILES) $(INPUTS) $(DOCSEQUENCE) $(TUTORIALS)
	 #------ phase 4: making $@
	rm -f ../cache/Macaulay2-tmp
	../../bin/M2 -q --silent --stop \
		-e 'phase = 4' \
		-e 'errorDepth 0' \
		-e 'DocDatabase = openDatabaseOut "../cache/Macaulay2-tmp"' \
		Macaulay2-doc.m2 -e 'exit(0)'
	mv ../cache/Macaulay2-tmp $@
	touch $@

install :: phase5

$(htmldocdir) : ; install -d $@

phase5 : phase4 $(htmldocdir) $(htmldocdir)/index.html always
$(htmldocdir)/index.html : ../cache/Macaulay2-made ../cache/Macaulay2-doc ../bin/Macaulay2
	 #------ phase 5: making html documentation
	../../bin/M2 -q --silent --stop \
		-e 'phase = 5; errorDepth 0' \
		-e 'makeHTML("$(prefix)/","@prefix@")' \
		-e 'exit 0'
install ::
	install -d $(docm2dir)
	ln -s $(PACKAGE_VERSION) $(docm2dir)/currentVersion

install ::
	$(INSTALL_PROGRAM) -d "$(htmldocdir)"
	cd $(htmldocdir) && tar cf - *.html | tar xf - -C "$(htmldocdir)"

HOMEDIR := $(shell cd .. && pwd)
check :: check-links
check-links :
	@ echo "make: Entering directory \`$(shell cd $(htmldocdir) && pwd)'"
	 #------ checking the links in the html documentation
	@ cd $(htmldocdir) && $(HOMEDIR)/html-check-links/html-check-links *.html
	@ echo "make: Leaving directory \`$(shell cd $(htmldocdir) && pwd)'"

ifdef NEWENGINE
check:: test1
test1 : test.m2 phase1
	../../bin/M2 -e 'errorDepth 0' -q test.m2 -e '<< "--test succeeded" << endl' -e 'exit 0'
	touch $@
endif

check:: test2
test2: phase1 ../bin/Macaulay2$(EXE)
	$(MAKE) -k -C cache/tests -f $(srcdir)/Makefile.tests srcdir=$(srcdir)
	touch $@
clean::; rm -f test2

check:: test3
test3:
	echo 2+3 | ../../bin/M2
	touch $@
clean::; rm -f test3

ifeq ($(OS),Linux)
check:: test4
test4: ../util/screen
	echo 2+3 | ../util/screen ../../bin/M2
	touch $@
clean::; rm -f test4
endif

install::
	install -d $(datam2dir)
	ln -s $(PACKAGE_VERSION) $(datam2dir)/currentVersion

install:: $(DUMPEDM2FILES) $(DOCSEQUENCE)
	install -d $(m2dir)
	install $^ $(m2dir)

clean::
	rm -rf ../$(DUMPDATAFILE) ../cache/Macaulay2-doc \
		cache *.obj *.exe runexample \
		temp.data distfiles \
		loads.m2 docloads.m2 tutorials.m2 \
		mpcodes.m2 tutorials.m2 version.m2 core
distclean : clean
	rm -f Makefile
