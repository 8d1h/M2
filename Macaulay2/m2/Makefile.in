# @configure_input@
all :: initialize phase1
include ../../include/config.Makefile
VPATH = @srcdir@ @srcdir@/../d
srcdir = $(shell cd @srcdir@; /bin/pwd)

prefix := @pre_prefix@
exec_prefix := @pre_exec_prefix@

all:: initialize
Makefile : Makefile.in ; cd ../.. && ./config.status Macaulay2/m2/Makefile
emacs html: all; $(MAKE) -C ../$@
LD_LIBRARY_PATH := $(BUILTLIBPATH)/lib:$(LD_LIBRARY_PATH)
export LD_LIBRARY_PATH
##############################
.SUFFIXES: .m2
.PHONY: html initialize prep tags install-tmp
# there is a parallel list of tutorials in overview3.m2
DUMPEDM2FILES := setup.m2 startup.m2
DUMPEDM2DOCFILES := \
		@srcdir@/../packages/Macaulay2Doc/*.m2 \
		@srcdir@/../packages/Macaulay2Doc/functions/*.m2 \
		@srcdir@/../packages/Macaulay2Doc/variables/*.m2 \
		../packages/Macaulay2Doc.m2
NONDOCM2FILES := startup.m2 setup.m2
OTHERM2FILES := sagbi.m2
############################## statuscodes.m2
MADEM2FILES += statuscodes.m2
initialize :: statuscodes.m2
statuscodes.m2 : ../e/statuscodes
	( \
		echo 'RawStatusCodes = new HashTable from {' ; \
		sed 's/\(.*\):\(.*\):\(.*\)/  \1 => \3,/' ; \
		echo '}' ; \
	) <$< >$@
clean::; rm -f statuscodes.m2
############################## mpcodes.m2
ifdef MP
mpcodes.m2: ../../include/MP.h mpcodes.sed
	sed -f mpcodes.sed $< > $@
all:: mpcodes.m2
MADEM2FILES += mpcodes.m2
endif
############################## loads.m2
LOADSEQUENCE := $(shell cat @srcdir@/loadsequence)
DUMPEDM2FILES += $(patsubst version.m2, version.m2.in, $(LOADSEQUENCE))
NONDOCM2FILES += $(patsubst version.m2, version.m2.in, $(LOADSEQUENCE))
# M2 files made in the build directory are not mentioned in LOADSEQUENCE
MADEM2FILES += loads.m2
loads.m2 : loads.awk loadsequence
	@echo making $@
	@awk -f $^ >$@

############################## install.m2
MADEM2FILES += install.m2
install.m : install.m2.in ; cd ../.. && ./config.status Macaulay2/m2/install.m2
############################## tvalues.m2
MADEM2FILES += tvalues.m2
TVFILES := $(shell egrep -l -e "-- . typical value: " @srcdir@/../d/*.d)
all :: tvalues.m2
tvalues.m2 : $(TVFILES)
	egrep -e "-- . typical value: " $^ | sed 's/.*-- . typical value: \(.*\)/typval(\1)/' >$@
############################## installedpackages.m2
INSTALLEDPACKAGES := $(shell cat @srcdir@/installedpackages)
MADEM2FILES += installedpackages.m2
initialize :: installedpackages.m2
installedpackages.m2 : installedpackages Makefile
	exec <$< >$@ ; echo 'Core#"pre-installed packages" = {'; read x ; echo \"$$x\"; while read x ; do echo , \"$$x\" ; done ; echo '}'
clean :: ; rm -f installedpackages.m2
OTHERDUMPEDM2FILES += \
	$(wildcard $(patsubst %, @srcdir@/../packages/%/*.m2, $(INSTALLEDPACKAGES))) \
	$(wildcard $(patsubst %, @srcdir@/../packages/%.m2  , $(INSTALLEDPACKAGES)))
##############################
DUMPEDM2FILES += $(MADEM2FILES)
#################################
all :: tags
tags: Makefile @srcdir@/TAGS @srcdir@/TAGS.doc
clean::; rm -f TAGS @srcdir@/TAGS @srcdir@/TAGS.doc
@srcdir@/TAGS: \
		../d/layout.m2.in \
		$(NONDOCM2FILES) \
		installedpackages \
		$(OTHERM2FILES) \
		$(shell find @srcdir@/../packages -name "*.m2" -a -not -name .\#\* | sort) \
		../e/statuscodes \
		../emacs/makehlp.m2 \
		../emacs/makem2.m2 \
		../emacs/makesyms.m2 \
		loads.awk \
		@srcdir@/../*/COPYRIGHT \
		@srcdir@/../packages/Macaulay2Doc/basictests/*.m2 \
		@srcdir@/../book/*.m2 \
		@srcdir@/../packages/*.m2 \
		@srcdir@/../packages/*/*.m2 \
		@srcdir@/../packages/Macaulay2Doc/test/*.m2 \
		@srcdir@/../packages/Macaulay2Doc/test/engine/*.m2 \
		@srcdir@/../bugs/*/*.m2 \
		loadsequence \
		Makefile.in \
		Makefile.tests \
		../emacs/Makefile.in \
		../packages/Macaulay2Doc/basictests/Makefile.in \
		../packages/Macaulay2Doc/test/Makefile.in \
		../packages/Macaulay2Doc/test/Makefile.test.in \
		../packages/Macaulay2Doc/test/slow/Makefile.in \
		../packages/Macaulay2Doc/test/engine/Makefile.in \
		../packages/Makefile.in \
		../../Makefile ../../GNUmakefile.in \
		@srcdir@/../packages/*/Makefile.in \
		@srcdir@/README.DOC
	@echo making $@
	@ set -e ; \
	  cd @srcdir@ && \
	  for i in $(patsubst @srcdir@/%, "%", $^) ; \
	  do [ -f $$i ] || (echo "file not found: $$i" >&2; exit 1) ; echo  ; echo $$i,0 ; done >TAGS

@srcdir@/TAGS.doc: Makefile.in $(shell find @srcdir@/../packages/Macaulay2Doc -not \( -name .svn -prune \) -type d)
	@echo making $@ : $^
	@ set -e ; \
	  cd @srcdir@ && \
	  find ../packages/Macaulay2Doc -name '*.m2' | while read i ; do echo  ; echo $$i,0 ; done >TAGS.doc
clean::; rm -f TAGS.doc
prep :: $(DUMPEDM2FILES)

phase1 :: prep

ifneq "@DUMPDATA@" "no"
phase1 :: @libm2dir@/Core/cache/@DUMPDATAFILE@
@libm2dir@/Core/cache/@DUMPDATAFILE@ redump : $(DUMPEDM2FILES) $(DUMPEDM2DOCFILES) @pre_exec_prefix@/bin/M2@EXE@ $(OTHERDUMPEDM2FILES)
	rm -f @libm2dir@/Core/cache/@DUMPDATAFILE@
	$(MKDIR_P) @libm2dir@/Core/cache
	@pre_exec_prefix@/bin/M2@EXE@ -q --stop -e 'errorDepth = 0' --dumpdata
	printenv LD_LIBRARY_PATH
endif

phase1 :: ../cache/Macaulay2-made
../cache/Macaulay2-made : $(DUMPEDM2FILES) $(DUMPEDM2DOCFILES) @pre_exec_prefix@/bin/M2@EXE@
	touch $@

## .gdbinit
all:: .gdbinit .gdb-files .gdb-run-it
gdb: .gdbinit .gdb-files; gdb @pre_exec_prefix@/bin/M2@EXE@
.gdbinit: .gdbinit.$(USER); cp $< $@
.gdbinit.$(USER):; touch $@
clean::; rm -f .gdbinit
.gdb-files: Makefile
	echo 'echo -- loading .gdb-files\n' >$@
	echo 'file @pre_exec_prefix@/bin/M2@EXE@' >>$@
clean :: ; rm -f .gdb-files
.gdb-run-it: Makefile
	echo 'echo -- loading .gdb-run-it\n' >$@
	echo 'echo \n' >>$@
	echo 'run -q --no-loaddata --no-readline --no-personality' >>$@
clean :: ; rm -f .gdb-run-it
profile : gmon.out
	gprof @pre_exec_prefix@/bin/M2@EXE@ >profile
clean ::; rm -f profile

ifeq "@DEBUG@" "yes"
EGFLAGS = -k
EGMORE = || true
endif

TMPDIR = tmp
check:: $(TMPDIR) test2
$(TMPDIR) :; mkdir $@
test2: phase1 @pre_exec_prefix@/bin/M2@EXE@
	$(MAKE) -k -C $(TMPDIR) -f $(srcdir)/Makefile.tests srcdir=$(srcdir)
	touch $@
clean::; rm -f test2

check:: test3
test3:
	echo 2+3 | @pre_exec_prefix@/bin/M2@EXE@
	touch $@
clean::; rm -f test3

ifeq (@OS@,Linux)
# check:: test4
test4: ../util/screen
	echo 2+3 | ../util/screen @pre_exec_prefix@/bin/M2@EXE@
	touch $@
clean::; rm -f test4
endif

@packagesdir@ :; @INSTALL@ -d $@
@packagesdir@/Core  : ; @INSTALL@ -d $@
@packagesdir@/Core/% : % ; @INSTALL_DATA@ $^ $@
FILES_TO_COPY := $(DUMPEDM2FILES) demo1.m2
pre-install :: all @packagesdir@ @packagesdir@/Core $(addprefix @packagesdir@/Core/, $(FILES_TO_COPY))
clean::; rm -rf ../cache/@DUMPDATAFILE@ cache *.obj *.exe runexample temp.data distfiles loads.m2 mpcodes.m2 core gmon.out
distclean : clean; rm -f Makefile version.m2

# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/m2 "
# End:
