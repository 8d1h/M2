# @configure_input@
justM2 all default :: initialize phase1
quick-install : justM2 install
include ../../include/config.Makefile
VPATH = @srcdir@:../tutorial/final
srcdir = $(shell cd @srcdir@; /bin/pwd)
all:: initialize
Makefile : Makefile.in ; cd ../.. && ./config.status Macaulay2/m2/Makefile
emacs html: all; $(MAKE) -C ../$@

##############################
.SUFFIXES: .m2
.PHONY: clean all install html distclean check default initialize prep always tags install-tmp

LOADSEQUENCE = $(shell cat @srcdir@/loadsequence)
EXAMPLEDATAFILES = expression sample

# there is a parallel list of tutorials in overview3.m2
TUTORIALS = $(patsubst %, ../tutorial/final/%, Fano.out canEmbed.out divisors.out elementary.out)

# M2 files made in the build directory are not mentioned in LOADSEQUENCE above
MADEM2FILES := loads.m2 statuscodes.m2

ifdef MP
mpcodes.m2: ../../include/MP.h mpcodes.sed
	sed -f mpcodes.sed $< > $@
all:: mpcodes.m2
MADEM2FILES += mpcodes.m2
endif

DUMPEDM2FILES := $(LOADSEQUENCE) setup.m2 startup.m2 $(MADEM2FILES) @srcdir@/../packages/Macaulay2/*.m2 @srcdir@/../packages/Macaulay2.m2

ifneq "$(DUMPDATA)" "no"
DUMPEDM2FILES := $(DUMPEDM2FILES)
endif

OTHERM2FILES = sagbi.m2

NONDOCM2FILES = startup.m2 setup.m2 $(LOADSEQUENCE) $(OTHERM2FILES)

loads.m2 : loads.awk loadsequence
	@echo making $@
	@awk -f $^ >$@

#################################

default:: 

all default justM2:: tags
tags: @srcdir@/TAGS @srcdir@/TAGS.doc
clean::; rm -f TAGS @srcdir@/TAGS @srcdir@/TAGS.doc
@srcdir@/TAGS: loadsequence Makefile.in $(NONDOCM2FILES) @srcdir@/*.awk @srcdir@/../basictests/*.m2 @srcdir@/../test/*.m2 @srcdir@/../test/engine/*.m2 \
		@srcdir@/../book/*.m2 @srcdir@/../packages/*.m2 @srcdir@/../packages/*/*.m2 ../emacs/makehlp.m2 ../emacs/makem2.m2 \
		@srcdir@/README.DOC @srcdir@/../*/COPYRIGHT ../emacs/makesyms.m2 @srcdir@/../tutorial/prelim/*.m2 \
		@srcdir@/../tutorial/final/*.m2 Makefile.tests @srcdir@/../e/statuscodes \
		../basictests/Makefile.in ../emacs/Makefile.in ../packages/Style/Makefile.in ../packages/Makefile.in ../tutorial/Makefile.in ../CHANGES
	@echo making $@
	@ set -e ; \
	  cd @srcdir@ && \
	  for i in $(patsubst @srcdir@/%, %, $^) ; \
	  do [ -f $$i ] || (echo "file not found: $$i" >&2; exit 1) ; echo  ; echo $$i,0 ; done >TAGS
@srcdir@/TAGS.doc: Makefile.in @srcdir@/../packages/Macaulay2/*.m2
	@echo making $@
	@ set -e ; \
	  cd @srcdir@ && \
	  for i in $(patsubst @srcdir@/%, %, $^) ; \
	  do [ -f $$i ] || (echo "file not found: $$i" >&2; exit 1) ; echo  ; echo $$i,0 ; done >TAGS.doc
clean::; rm -f TAGS.doc
prep :: $(DUMPEDM2FILES)

phase1 :: prep

ifneq "$(DUMPDATA)" "no"
phase1 :: ../$(DUMPDATAFILE)
../$(DUMPDATAFILE) : $(DUMPEDM2FILES) ../bin/M2
	rm -f ../$(DUMPDATAFILE)
	../bin/M2 -q --stop -e 'errorDepth = 0' --dumpdata
endif

phase1 :: ../cache/Macaulay2-made
../cache/Macaulay2-made : $(DUMPEDM2FILES) ../bin/M2$(EXE)
	touch $@

## .gdbinit
justM2 all:: .gdbinit .gdb-files .gdb-run-it
gdb: .gdbinit .gdb-files; gdb ../bin/M2$(EXE)
.gdbinit: .gdbinit.$(USER); cp $< $@
clean::; rm -f .gdbinit
.gdb-files: Makefile
	echo 'echo -- loading .gdb-files\n' >$@
	echo 'file ../bin/M2' >>$@
clean :: ; rm -f .gdb-files
.gdb-run-it: Makefile
	echo 'echo -- loading .gdb-run-it\n' >$@
	echo 'echo \n' >>$@
	echo 'run -q --no-loaddata' >>$@
clean :: ; rm -f .gdb-run-it
profile : gmon.out
	gprof ../bin/M2 >profile
clean ::; rm -f profile

ifeq "$(DEBUG)" "yes"
EGFLAGS = -k
EGMORE = || true
endif


$(htmldocdir) : ; install -d $@

check:: test1
test1 : test.m2 phase1
	../bin/M2 -e 'errorDepth = 0' -q test.m2 -e '<< "--test succeeded" << endl' -e 'exit 0'
	touch $@

TMPDIR = tmp

check:: $(TMPDIR) test2
test2: phase1 ../bin/M2$(EXE)
	$(MAKE) -k -C $(TMPDIR) -f $(srcdir)/Makefile.tests srcdir=$(srcdir)
	touch $@
clean::; rm -f test2

check:: test3
test3:
	echo 2+3 | ../bin/M2
	touch $@
clean::; rm -f test3

ifeq ($(OS),Linux)
check:: test4
test4: ../util/screen
	echo 2+3 | ../util/screen ../bin/M2
	touch $@
clean::; rm -f test4
endif

install:: $(datam2dir)
$(datam2dir) :
	$(INSTALL) -d $(datam2dir)

install:: $(DUMPEDM2FILES) $(TUTORIALS)
	$(INSTALL) -d "$(m2dir)"
	$(INSTALL_DATA) $^ "$(m2dir)"

ifeq "$(ENCAP)" "yes"
ENCAPVALUE = true
else 
ENCAPVALUE = false
endif

initialize :: statuscodes.m2
statuscodes.m2 : ../e/statuscodes
	( \
		echo 'RawStatusCodes = new HashTable from {' ; \
		sed 's/\(.*\):\(.*\):\(.*\)/  \1 => \3,/' ; \
		echo '}' ; \
	) <$< >$@
clean::; rm -f statuscodes.m2

install:: all

M2OPTIONS := -q
ifndef INTERACTIVE
M2OPTIONS += --stop
M2OPTIONS += --no-debug
endif
M2OPTIONS += -e errorDepth=0
M2OPTIONS += -e debugLevel=0
M2OPTIONS += -e 'installPackage(Macaulay2Core, Encapsulate => false, PackagePrefix => "$(encapdir)/", MakeLinks => false, MakeDocumentation => false)'
ifndef INTERACTIVE
M2OPTIONS += -e 'exit 0 '
endif

# $(TMPDIR) :; mkdir "$@"
# install :: $(TMPDIR)
install ::
	@ echo installing the Macaulay2Core package
	@ set -x ; time ../bin/M2 $(M2OPTIONS)

clean::; rm -rf ../$(DUMPDATAFILE) cache *.obj *.exe runexample temp.data distfiles loads.m2 mpcodes.m2 version.m2 core
distclean : clean; rm -f Makefile
always:

# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/m2 "
# End:
