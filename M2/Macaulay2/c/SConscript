import os.path
Import('state','getState','setArchitectureState','getLibSpecific','setLibSpecific','numberSubTasks',
        'setLibSpecificStateEnvExport','setLibSpecificConfigExport','setLibSpecificMakeExport','setLibSpecificMakeInstallExport','setLibSpecificNumStages','setLibSpecificStageCommandArguments',
        'setLibSpecificStageCommand','getLibSpecificStageEnvExport','getLibSpecificConfigEnv','getLibSpecificMakeEnv','getLibSpecificMakeInstallEnv','getLibSpecificNumStages','getLibSpecificStageCommandArguments',
        'getLibSpecificStageCommand','getLibSpecificEnv','Glob','exportDict','buildSettings')

cfiles = Glob('*.c','.')
cfiles = cfiles + Glob('*.cpp','.')
cfiles.remove('scc-core.c')
cfiles.remove('test.c')
cflags = '-I'+buildSettings.getState('prefixpath')+'include/ -DNO_CONFIG ' + getState(buildSettings,'M2flags')
cobjects = []
for f in cfiles:
    if(f=='grammar.cpp'):   
        cobjects.append(Object(f,CXXFLAGS=cflags+' -Wno-write-strings'))
    else:
        cobjects.append(Object(f,CFLAGS=cflags,CXXFLAGS=cflags))
libpath = '#'+buildSettings.getState('prefixpath')+'lib/'
scc = Program('scc',cobjects,LIBS=['gc','gdbm','pthread'],LIBPATH=libpath)
buildSettings.setState('scc',scc)
buildSettings.setState('sccfiles',cobjects)


