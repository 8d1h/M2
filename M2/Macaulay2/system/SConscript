import os.path
Import('state','getState','setState','getLibSpecific','setLibSpecific','architecture','numberSubTasks',
        'setLibSpecificStateEnvExport','setLibSpecificConfigExport','setLibSpecificMakeExport','setLibSpecificMakeInstallExport','setLibSpecificNumStages','setLibSpecificStageCommandArguments',
        'setLibSpecificStageCommand','getLibSpecificStageEnvExport','getLibSpecificConfigEnv','getLibSpecificMakeEnv','getLibSpecificMakeInstallEnv','getLibSpecificNumStages','getLibSpecificStageCommandArguments',
        'getLibSpecificStageCommand','getLibSpecificEnv','Glob','exportDict','mode')

efiles = Glob("*.cpp",".")
buildpath = getState(mode,architecture,'buildpath')+'Macaulay2/system/'
prefixPath = getState(mode,architecture,'prefixpath')
eflags = "-I"+buildpath+"../d/ -IMacaulay2/platform/ -IMacaulay2/d/ -IMacaulay2/e -IMacaulay2/e-includes -I"+prefixPath+"include/ -I"+prefixPath+"include/libxml2/ -IMacaulay2/c/ -IMacaulay2/m2-includes "+getState(mode,architecture,'eflags')
eobjects = []
dpthread = getState(mode,architecture,'dFileDict')['pthread.d']
for f in efiles:
    obj = Object(f,CFLAGS=eflags,CXXFLAGS=eflags)
    eobjects.append(obj)
    Depends(obj,dpthread)
    
state[architecture][mode]['systemfiles']=eobjects
Return('eobjects')

