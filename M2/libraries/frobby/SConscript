import os.path
import shutil
import subprocess
Import('extractPackageName','extractPackageBaseName','getLibSpecific','setLibSpecific','untarLibrary','transferEnv',
       'configureLibrary','makeLibrary','makeInstallLibrary','deepCleanLibrary','cleanLibrary',
       'setLibSpecificStateEnvExport','setLibSpecificConfigExport','setLibSpecificMakeExport','setLibSpecificMakeInstallExport','setLibSpecificNumStages','setLibSpecificStageCommandArguments',
       'setLibSpecificStageCommand','getLibSpecificStageEnvExport','getLibSpecificConfigEnv','getLibSpecificMakeEnv','getLibSpecificMakeInstallEnv','getLibSpecificNumStages','getLibSpecificStageCommandArguments',
       'getLibSpecificStageCommand','installBuilders','defaultCleanLibrary')

#set this to library name
libraryName = 'frobby'
#Library specific declarations go here.
setLibSpecific('all','all',libraryName,'CompressedLib','frobby_v0.8.2.tar.gz')
setLibSpecific('all',['linux-x86','linux-x86_64','Darwin-x86','Darwin-x86_64'],libraryName,'InstallFiles',['$SConsInstallPrefixPath/lib/libfrobby.a'])
setLibSpecific('all','all',libraryName,'DecompressLib',True)
setLibSpecific('all','all',libraryName,'Dependencies',['mpir'])
setLibSpecificNumStages('all','all',libraryName,3)
setLibSpecificMakeExport('all',['linux-x86','linux-x86_64','Darwin-x86'],libraryName,'CC','gcc')
setLibSpecificMakeExport('all',['linux-x86','linux-x86_64','Darwin-x86'],libraryName,'CXX','g++')
setLibSpecificMakeExport('all',['Darwin-x86_64'],libraryName,'CC','gcc -m64')
setLibSpecificMakeExport('all',['Darwin-x86_64'],libraryName,'CXX','g++ -m64')
setLibSpecificStageCommandArguments('release','all',libraryName,1,[ 'prefix=$SConsInstallPrefixPath','LDFLAGS=-L$SConsInstallPrefixPath/lib/', 'CFLAGS=-I$SConsInstallPrefixPath/include/ -g -O3 -Wno-deprecated', 'library'])
setLibSpecificStageCommandArguments('debug','all',libraryName,1,[ 'prefix=$SConsInstallPrefixPath','LDFLAGS=-L$SConsInstallPrefixPath/lib/', 'CFLAGS=-I$SConsInstallPrefixPath/include/ -g -O0 -Wno-deprecated','library'])

setLibSpecific('all','all',libraryName,'patchfile','../../../../../libraries/frobby/patch-0.8.2')
setLibSpecific('all','all',libraryName,'enableParallelSubBuild',True)
   
def BuildLibrary(target,source,env):
   """
   Build target for the library.
   """
   buildSettings = env.buildSettings
   source = source[0].rstr()
   sourceFile = os.path.split(source)[1]
   packageName = extractPackageName(sourceFile)
   cleaned = defaultCleanLibrary(buildSettings,libraryName)
   untarLibrary(buildSettings,source, packageName, libraryName)
   if(buildSettings.getLibSpecific(libraryName,'stage0')):
      buildSettings.setLibSpecific(libraryName,'stage1',True)
   else:
      return None
   if makeLibrary(buildSettings,source,packageName,libraryName):
      prefixpath = buildSettings.getPrefixPath()
      buildpath = buildSettings.getBuildPath()
      realpath = buildpath+packageName+'/'
   #install...
      shutil.copy(realpath+'bin/libfrobby.a',os.path.abspath(prefixpath+'lib/libfrobby.a'))
      shutil.copy(realpath+'src/frobby.h',os.path.abspath(prefixpath+'include/frobby.h'))
      shutil.copy(realpath+'src/stdinc.h',os.path.abspath(prefixpath+'include/stdinc.h'))
   return None
   
installBuilders(BuildLibrary,libraryName)
