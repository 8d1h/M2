import os.path
import shutil
import subprocess
Import('extractPackageName','extractPackageBaseName','getLibSpecific','setLibSpecific','untarLibrary','transferEnv',
       'configureLibrary','makeLibrary','makeInstallLibrary','deepCleanLibrary','cleanLibrary',
       'setLibSpecificStateEnvExport','setLibSpecificConfigExport','setLibSpecificMakeExport','setLibSpecificMakeInstallExport','setLibSpecificNumStages','setLibSpecificStageCommandArguments',
       'setLibSpecificStageCommand','getLibSpecificStageEnvExport','getLibSpecificConfigEnv','getLibSpecificMakeEnv','getLibSpecificMakeInstallEnv','getLibSpecificNumStages','getLibSpecificStageCommandArguments',
       'getLibSpecificStageCommand','defaultCleanLibrary','installBuilders')

#set this to library name
libraryName = 'pari'
#Library specific declarations go here.
setLibSpecific('all','all','pari','downloadPath','http://www.math.uiuc.edu/Macaulay2/Downloads/OtherSourceCode/trunk/')
setLibSpecific('all','all',libraryName,'CompressedLib','pari-2.5.0.tar.gz')
setLibSpecific('all',['linux-x86','linux-x86_64','Darwin-x86_64','Darwin-x86'],libraryName,'InstallFiles',['$SConsInstallPrefixPath/lib/libpari.a'])
setLibSpecific('all','all',libraryName,'DecompressLib',True)
setLibSpecific('all','all',libraryName,'Dependencies',['mpir'])
setLibSpecificNumStages('all','all',libraryName,3)
setLibSpecificConfigExport('all',['linux-x86','linux-x86_64','Darwin-x86_64','Darwin-x86'],libraryName,'CC','gcc')
setLibSpecificConfigExport('all',['linux-x86','linux-x86_64','Darwin-x86_64','Darwin-x86'],libraryName,'CXX','g++')
setLibSpecificConfigExport('all',['linux-x86','linux-x86_64','Darwin-x86_64','Darwin-x86'],libraryName,'CPPFLAGS','-I$SConsInstallPrefixPath/include/')
setLibSpecificConfigExport('all',['linux-x86','linux-x86_64','Darwin-x86_64','Darwin-x86'],libraryName,'LDFLAGS','-L$SConsInstallPrefixPath/lib/')
setLibSpecificStageCommandArguments('all','all',libraryName,0,['--prefix=$SConsInstallPrefixPath','--with-gmp=$SConsInstallPrefixPath'])
setLibSpecificStageCommandArguments('all','all',libraryName,1,['lib-sta'])
setLibSpecificStageCommandArguments('all','all',libraryName,2,['install-lib-sta','install-include'])
setLibSpecificStageCommand('all','all',libraryName,0,'Configure')
def BuildLibrary(target,source,env):
   """
   Build target for the library.
   """
   buildSettings = env.buildSettings
   source = source[0].rstr()
   sourceFile = os.path.split(source)[1]
   packageName = extractPackageName(sourceFile)
   cleaned = defaultCleanLibrary(buildSettings,libraryName)
   untarLibrary(buildSettings,source, packageName, libraryName)
   configureLibrary(buildSettings,source,packageName,libraryName)
   architecture = buildSettings.architecture()
   if architecture == 'linux-x86_64':
      offset = 'Olinux-x86_64/'
   elif architecture == 'linux-x86':
      offset = 'Olinux-i686/'
   elif architecture == 'Darwin-x86_64':
      offset = 'Odarwin-i386'
   elif architecture == 'Darwin-x86':
      offset = 'Odarwin-i386'
   else:
      raise NotImplementedError(architecture + " not implemented for Pari")
   makeLibrary(buildSettings,source,packageName,libraryName,diroffset = offset)
   makeInstallLibrary(buildSettings,source,packageName,libraryName,diroffset = offset)
   return None
   
installBuilders(BuildLibrary,libraryName)
